

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 01 16:49:42 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           ; Version 1.42
    53                           ; Generated 13/04/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F46K22 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataBIGRAM
    88  00101E                     __pidataBIGRAM:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _kiwi_frequence
    92  00101E  2E                 	db	46
    93  00101F  2E                 	db	46
    94  001020  2E                 	db	46
    95  001021  00                 	db	0
    96  001022  2E                 	db	46
    97  001023  2E                 	db	46
    98  001024  2E                 	db	46
    99  001025  00                 	db	0
   100  001026  2E                 	db	46
   101  001027  2E                 	db	46
   102  001028  2E                 	db	46
   103  001029  00                 	db	0
   104  00102A  3B                 	db	59
   105  00102B  3B                 	db	59
   106  00102C  3B                 	db	59
   107  00102D  00                 	db	0
   108  00102E  2E                 	db	46
   109  00102F  2E                 	db	46
   110  001030  2E                 	db	46
   111  001031  00                 	db	0
   112  001032  27                 	db	39
   113  001033  27                 	db	39
   114  001034  27                 	db	39
   115  001035  00                 	db	0
   116  001036  27                 	db	39
   117  001037  27                 	db	39
   118  001038  27                 	db	39
   119  001039  00                 	db	0
   120  00103A  3B                 	db	59
   121  00103B  3B                 	db	59
   122  00103C  3B                 	db	59
   123  00103D  00                 	db	0
   124  00103E  27                 	db	39
   125  00103F  27                 	db	39
   126  001040  27                 	db	39
   127  001041  00                 	db	0
   128  001042  23                 	db	35
   129  001043  23                 	db	35
   130  001044  23                 	db	35
   131  001045  00                 	db	0
   132  001046  1F                 	db	31
   133  001047  1F                 	db	31
   134  001048  1F                 	db	31
   135  001049  00                 	db	0
   136  00104A  21                 	db	33
   137  00104B  21                 	db	33
   138  00104C  21                 	db	33
   139  00104D  00                 	db	0
   140  00104E  23                 	db	35
   141  00104F  23                 	db	35
   142  001050  23                 	db	35
   143  001051  00                 	db	0
   144  001052  27                 	db	39
   145  001053  27                 	db	39
   146  001054  27                 	db	39
   147  001055  00                 	db	0
   148  001056  2E                 	db	46
   149  001057  2E                 	db	46
   150  001058  2E                 	db	46
   151  001059  00                 	db	0
   152  00105A  27                 	db	39
   153  00105B  27                 	db	39
   154  00105C  27                 	db	39
   155  00105D  00                 	db	0
   156  00105E  23                 	db	35
   157  00105F  23                 	db	35
   158  001060  23                 	db	35
   159  001061  00                 	db	0
   160  001062  2C                 	db	44
   161  001063  2C                 	db	44
   162  001064  2C                 	db	44
   163  001065  00                 	db	0
   164  001066  27                 	db	39
   165  001067  27                 	db	39
   166  001068  27                 	db	39
   167  001069  00                 	db	0
   168  00106A  2E                 	db	46
   169  00106B  2E                 	db	46
   170  00106C  2E                 	db	46
   171  00106D  00                 	db	0
   172  00106E  3B                 	db	59
   173  00106F  3B                 	db	59
   174  001070  3B                 	db	59
   175  001071  00                 	db	0
   176  001072  34                 	db	52
   177  001073  34                 	db	52
   178  001074  34                 	db	52
   179  001075  00                 	db	0
   180  001076  1F                 	db	31
   181  001077  1F                 	db	31
   182  001078  1F                 	db	31
   183  001079  00                 	db	0
   184  00107A  3B                 	db	59
   185  00107B  3B                 	db	59
   186  00107C  3B                 	db	59
   187  00107D  00                 	db	0
   188  00107E  27                 	db	39
   189  00107F  27                 	db	39
   190  001080  27                 	db	39
   191  001081  00                 	db	0
   192  001082  23                 	db	35
   193  001083  23                 	db	35
   194  001084  23                 	db	35
   195  001085  00                 	db	0
   196  001086  1F                 	db	31
   197  001087  1F                 	db	31
   198  001088  1F                 	db	31
   199  001089  00                 	db	0
   200  00108A  21                 	db	33
   201  00108B  21                 	db	33
   202  00108C  21                 	db	33
   203  00108D  00                 	db	0
   204  00108E  23                 	db	35
   205  00108F  23                 	db	35
   206  001090  23                 	db	35
   207  001091  00                 	db	0
   208  001092  27                 	db	39
   209  001093  27                 	db	39
   210  001094  27                 	db	39
   211  001095  00                 	db	0
   212  001096  2E                 	db	46
   213  001097  2E                 	db	46
   214  001098  2E                 	db	46
   215  001099  00                 	db	0
   216  00109A  27                 	db	39
   217  00109B  27                 	db	39
   218  00109C  27                 	db	39
   219  00109D  00                 	db	0
   220  00109E  23                 	db	35
   221  00109F  23                 	db	35
   222  0010A0  23                 	db	35
   223  0010A1  00                 	db	0
   224  0010A2  2C                 	db	44
   225  0010A3  2C                 	db	44
   226  0010A4  2C                 	db	44
   227  0010A5  00                 	db	0
   228  0010A6  27                 	db	39
   229  0010A7  27                 	db	39
   230  0010A8  27                 	db	39
   231  0010A9  00                 	db	0
   232  0010AA  2E                 	db	46
   233  0010AB  2E                 	db	46
   234  0010AC  2E                 	db	46
   235  0010AD  00                 	db	0
   236  0010AE  3B                 	db	59
   237  0010AF  3B                 	db	59
   238  0010B0  3B                 	db	59
   239  0010B1  00                 	db	0
   240  0010B2  34                 	db	52
   241  0010B3  34                 	db	52
   242  0010B4  34                 	db	52
   243  0010B5  00                 	db	0
   244  0010B6  1F                 	db	31
   245  0010B7  1F                 	db	31
   246  0010B8  1F                 	db	31
   247  0010B9  00                 	db	0
   248  0010BA  27                 	db	39
   249  0010BB  27                 	db	39
   250  0010BC  27                 	db	39
   251  0010BD  00                 	db	0
   252  0010BE  29                 	db	41
   253  0010BF  29                 	db	41
   254  0010C0  29                 	db	41
   255  0010C1  00                 	db	0
   256  0010C2  2C                 	db	44
   257  0010C3  2C                 	db	44
   258  0010C4  2C                 	db	44
   259  0010C5  00                 	db	0
   260  0010C6  31                 	db	49
   261  0010C7  31                 	db	49
   262  0010C8  31                 	db	49
   263  0010C9  00                 	db	0
   264  0010CA  2E                 	db	46
   265  0010CB  2E                 	db	46
   266  0010CC  2E                 	db	46
   267  0010CD  00                 	db	0
   268  0010CE  23                 	db	35
   269  0010CF  23                 	db	35
   270  0010D0  23                 	db	35
   271  0010D1  00                 	db	0
   272  0010D2  23                 	db	35
   273  0010D3  23                 	db	35
   274  0010D4  23                 	db	35
   275  0010D5  00                 	db	0
   276  0010D6  3B                 	db	59
   277  0010D7  3B                 	db	59
   278  0010D8  3B                 	db	59
   279  0010D9  00                 	db	0
   280  0010DA  23                 	db	35
   281  0010DB  23                 	db	35
   282  0010DC  23                 	db	35
   283  0010DD  00                 	db	0
   284  0010DE  3B                 	db	59
   285  0010DF  3B                 	db	59
   286  0010E0  3B                 	db	59
   287  0010E1  00                 	db	0
   288  0010E2  34                 	db	52
   289  0010E3  34                 	db	52
   290  0010E4  34                 	db	52
   291  0010E5  00                 	db	0
   292  0010E6  27                 	db	39
   293  0010E7  27                 	db	39
   294  0010E8  27                 	db	39
   295  0010E9  00                 	db	0
   296  0010EA  29                 	db	41
   297  0010EB  29                 	db	41
   298  0010EC  29                 	db	41
   299  0010ED  00                 	db	0
   300  0010EE  2C                 	db	44
   301  0010EF  2C                 	db	44
   302  0010F0  2C                 	db	44
   303  0010F1  00                 	db	0
   304  0010F2  31                 	db	49
   305  0010F3  31                 	db	49
   306  0010F4  31                 	db	49
   307  0010F5  00                 	db	0
   308  0010F6  2E                 	db	46
   309  0010F7  2E                 	db	46
   310  0010F8  2E                 	db	46
   311  0010F9  00                 	db	0
   312  0010FA  3B                 	db	59
   313  0010FB  3B                 	db	59
   314  0010FC  3B                 	db	59
   315  0010FD  00                 	db	0
   316  0010FE  3B                 	db	59
   317  0010FF  3B                 	db	59
   318  001100  3B                 	db	59
   319  001101  00                 	db	0
   320  001102  3B                 	db	59
   321  001103  3B                 	db	59
   322  001104  3B                 	db	59
   323  001105  00                 	db	0
   324  001106  27                 	db	39
   325  001107  27                 	db	39
   326  001108  27                 	db	39
   327  001109  00                 	db	0
   328  00110A  29                 	db	41
   329  00110B  29                 	db	41
   330  00110C  29                 	db	41
   331  00110D  00                 	db	0
   332  00110E  2C                 	db	44
   333  00110F  2C                 	db	44
   334  001110  2C                 	db	44
   335  001111  00                 	db	0
   336  001112  31                 	db	49
   337  001113  31                 	db	49
   338  001114  31                 	db	49
   339  001115  00                 	db	0
   340  001116  2E                 	db	46
   341  001117  2E                 	db	46
   342  001118  2E                 	db	46
   343  001119  00                 	db	0
   344  00111A  23                 	db	35
   345  00111B  23                 	db	35
   346  00111C  23                 	db	35
   347  00111D  00                 	db	0
   348  00111E  23                 	db	35
   349  00111F  23                 	db	35
   350  001120  23                 	db	35
   351  001121  00                 	db	0
   352  001122  3B                 	db	59
   353  001123  3B                 	db	59
   354  001124  3B                 	db	59
   355  001125  00                 	db	0
   356  001126  23                 	db	35
   357  001127  23                 	db	35
   358  001128  23                 	db	35
   359  001129  00                 	db	0
   360  00112A  3B                 	db	59
   361  00112B  3B                 	db	59
   362  00112C  3B                 	db	59
   363  00112D  00                 	db	0
   364  00112E  34                 	db	52
   365  00112F  34                 	db	52
   366  001130  34                 	db	52
   367  001131  00                 	db	0
   368  001132  27                 	db	39
   369  001133  27                 	db	39
   370  001134  27                 	db	39
   371  001135  00                 	db	0
   372  001136  29                 	db	41
   373  001137  29                 	db	41
   374  001138  29                 	db	41
   375  001139  00                 	db	0
   376  00113A  2C                 	db	44
   377  00113B  2C                 	db	44
   378  00113C  2C                 	db	44
   379  00113D  00                 	db	0
   380  00113E  31                 	db	49
   381  00113F  31                 	db	49
   382  001140  31                 	db	49
   383  001141  00                 	db	0
   384  001142  2E                 	db	46
   385  001143  2E                 	db	46
   386  001144  2E                 	db	46
   387  001145  00                 	db	0
   388  001146  23                 	db	35
   389  001147  23                 	db	35
   390  001148  23                 	db	35
   391  001149  00                 	db	0
   392  00114A  23                 	db	35
   393  00114B  23                 	db	35
   394  00114C  23                 	db	35
   395  00114D  00                 	db	0
   396  00114E  3B                 	db	59
   397  00114F  3B                 	db	59
   398  001150  3B                 	db	59
   399  001151  00                 	db	0
   400  001152  23                 	db	35
   401  001153  23                 	db	35
   402  001154  23                 	db	35
   403  001155  00                 	db	0
   404  001156  3B                 	db	59
   405  001157  3B                 	db	59
   406  001158  3B                 	db	59
   407  001159  00                 	db	0
   408  00115A  34                 	db	52
   409  00115B  34                 	db	52
   410  00115C  34                 	db	52
   411  00115D  00                 	db	0
   412  00115E  37                 	db	55
   413  00115F  37                 	db	55
   414  001160  37                 	db	55
   415  001161  00                 	db	0
   416  001162  34                 	db	52
   417  001163  34                 	db	52
   418  001164  34                 	db	52
   419  001165  00                 	db	0
   420  001166  3B                 	db	59
   421  001167  3B                 	db	59
   422  001168  3B                 	db	59
   423  001169  00                 	db	0
   424  00116A  00                 	db	0
   425  00116B  00                 	db	0
   426  00116C  00                 	db	0
   427  00116D  00                 	db	0
   428  00116E  00                 	db	0
   429  00116F  00                 	db	0
   430  001170  00                 	db	0
   431  001171  00                 	db	0
   432                           
   433                           	psect	idataBANK0
   434  001ACC                     __pidataBANK0:
   435                           	opt stack 0
   436                           
   437                           ;initializer for _kiwi_length
   438  001ACC  54                 	db	84
   439  0000                     _ANSELBbits	set	3897
   440  0000                     _LATD	set	3980
   441  0000                     _PORTD	set	3971
   442  0000                     _LATDbits	set	3980
   443  0000                     _TRISDbits	set	3989
   444  0000                     _PR2bits	set	4027
   445  0000                     _CCPR1Lbits	set	4030
   446  0000                     _CCP1CONbits	set	4029
   447  0000                     _T2CONbits	set	4026
   448  0000                     _LATCbits	set	3979
   449  0000                     _TRISCbits	set	3988
   450  0000                     _INTCON3bits	set	4080
   451  0000                     _LATBbits	set	3978
   452  0000                     _TRISBbits	set	3987
   453  0000                     _INTCONbits	set	4082
   454  0000                     _INTCON2bits	set	4081
   455                           
   456                           	psect	smallconst
   457  001000                     __psmallconst:
   458                           	opt stack 0
   459  001000  00                 	db	0
   460  001001  30                 	db	48	;'0'
   461  001002  31                 	db	49	;'1'
   462  001003  32                 	db	50	;'2'
   463  001004  33                 	db	51	;'3'
   464  001005  34                 	db	52	;'4'
   465  001006  35                 	db	53	;'5'
   466  001007  36                 	db	54	;'6'
   467  001008  37                 	db	55	;'7'
   468  001009  38                 	db	56	;'8'
   469  00100A  39                 	db	57	;'9'
   470  00100B  41                 	db	65	;'A'
   471  00100C  42                 	db	66	;'B'
   472  00100D  43                 	db	67	;'C'
   473  00100E  44                 	db	68	;'D'
   474  00100F  45                 	db	69	;'E'
   475  001010  46                 	db	70	;'F'
   476  001011  00                 	db	0
   477  001012                     STR_1:
   478  001012  4E                 	db	78	;'N'
   479  001013  6F                 	db	111	;'o'
   480  001014  6D                 	db	109	;'m'
   481  001015  62                 	db	98	;'b'
   482  001016  72                 	db	114	;'r'
   483  001017  65                 	db	101	;'e'
   484  001018  20                 	db	32
   485  001019  70                 	db	112	;'p'
   486  00101A  61                 	db	97	;'a'
   487  00101B  73                 	db	115	;'s'
   488  00101C  00                 	db	0
   489                           
   490                           ; #config settings
   491  00101D  00                 	db	0	; dummy byte at the end
   492  0000                     
   493                           	psect	cinit
   494  0017E8                     __pcinit:
   495                           	opt stack 0
   496  0017E8                     start_initialization:
   497                           	opt stack 0
   498  0017E8                     __initialization:
   499                           	opt stack 0
   500                           
   501                           ; Initialize objects allocated to BIGRAM (340 bytes)
   502                           ; load TBLPTR registers with __pidataBIGRAM
   503  0017E8  0E1E               	movlw	low __pidataBIGRAM
   504  0017EA  6EF6               	movwf	tblptrl,c
   505  0017EC  0E10               	movlw	high __pidataBIGRAM
   506  0017EE  6EF7               	movwf	tblptrh,c
   507  0017F0  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
   508  0017F2  6EF8               	movwf	tblptru,c
   509  0017F4  EE00  F071         	lfsr	0,__pdataBIGRAM
   510  0017F8  EE11 F054          	lfsr	1,340
   511  0017FC                     copy_data0:
   512  0017FC  0009               	tblrd		*+
   513  0017FE  CFF5 FFEE          	movff	tablat,postinc0
   514  001802  50E5               	movf	postdec1,w,c
   515  001804  50E1               	movf	fsr1l,w,c
   516  001806  E1FA               	bnz	copy_data0
   517  001808  50E2               	movf	fsr1h,w,c
   518  00180A  E1F8               	bnz	copy_data0
   519                           
   520                           ; Initialize objects allocated to BANK0 (1 bytes)
   521                           ; load TBLPTR registers with __pidataBANK0
   522  00180C  0ECC               	movlw	low __pidataBANK0
   523  00180E  6EF6               	movwf	tblptrl,c
   524  001810  0E1A               	movlw	high __pidataBANK0
   525  001812  6EF7               	movwf	tblptrh,c
   526  001814  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   527  001816  6EF8               	movwf	tblptru,c
   528  001818  0009               	tblrd		*+	;fetch initializer
   529  00181A  CFF5 F070          	movff	tablat,__pdataBANK0
   530                           
   531                           ; Clear objects allocated to BANK0 (2 bytes)
   532  00181E  0100               	movlb	0
   533  001820  6B6F               	clrf	(__pbssBANK0+1)& (0+255),b
   534  001822  6B6E               	clrf	__pbssBANK0& (0+255),b
   535  001824                     end_of_initialization:
   536                           	opt stack 0
   537  001824                     __end_of__initialization:
   538                           	opt stack 0
   539  001824  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   540  001826  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   541  001828  0E00               	movlw	low (__Lmediumconst shr (0+16))
   542  00182A  6EF8               	movwf	tblptru,c
   543  00182C  0100               	movlb	0
   544  00182E  EF61  F00D         	goto	_main	;jump to C main() function
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           postdec1	equ	0xFE5
   551                           fsr1h	equ	0xFE2
   552                           fsr1l	equ	0xFE1
   553                           
   554                           	psect	bssBANK0
   555  00006E                     __pbssBANK0:
   556                           	opt stack 0
   557  00006E                     _steps:
   558                           	opt stack 0
   559  00006E                     	ds	2
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           postinc0	equ	0xFEE
   565                           postdec1	equ	0xFE5
   566                           fsr1h	equ	0xFE2
   567                           fsr1l	equ	0xFE1
   568                           
   569                           	psect	dataBANK0
   570  000070                     __pdataBANK0:
   571                           	opt stack 0
   572  000070                     _kiwi_length:
   573                           	opt stack 0
   574  000070                     	ds	1
   575                           tblptru	equ	0xFF8
   576                           tblptrh	equ	0xFF7
   577                           tblptrl	equ	0xFF6
   578                           tablat	equ	0xFF5
   579                           postinc0	equ	0xFEE
   580                           postdec1	equ	0xFE5
   581                           fsr1h	equ	0xFE2
   582                           fsr1l	equ	0xFE1
   583                           
   584                           	psect	dataBIGRAM
   585  000071                     __pdataBIGRAM:
   586                           	opt stack 0
   587  000071                     _kiwi_frequence:
   588                           	opt stack 0
   589  000071                     	ds	340
   590                           tblptru	equ	0xFF8
   591                           tblptrh	equ	0xFF7
   592                           tblptrl	equ	0xFF6
   593                           tablat	equ	0xFF5
   594                           postinc0	equ	0xFEE
   595                           postdec1	equ	0xFE5
   596                           fsr1h	equ	0xFE2
   597                           fsr1l	equ	0xFE1
   598                           
   599                           	psect	cstackBANK0
   600  000060                     __pcstackBANK0:
   601                           	opt stack 0
   602  000060                     ??_searched:
   603  000060                     LCDWriteInt@row:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x0
   607  000060                     	ds	1
   608  000061                     LCDWriteInt@value:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x1
   612  000061                     	ds	1
   613  000062                     LCDWriteInt@column:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x2
   617  000062                     	ds	1
   618  000063                     searched@i:
   619                           	opt stack 0
   620  000063                     LCDWriteInt@string:
   621                           	opt stack 0
   622                           
   623                           ; 3 bytes @ 0x3
   624  000063                     	ds	2
   625  000065                     searched@max_time:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x5
   629  000065                     	ds	2
   630  000067                     searched@time:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x7
   634  000067                     	ds	2
   635  000069                     
   636                           ; 2 bytes @ 0x9
   637  000069                     	ds	2
   638  00006B                     
   639                           ; 3 bytes @ 0xB
   640  00006B                     	ds	3
   641                           tblptru	equ	0xFF8
   642                           tblptrh	equ	0xFF7
   643                           tblptrl	equ	0xFF6
   644                           tablat	equ	0xFF5
   645                           postinc0	equ	0xFEE
   646                           postdec1	equ	0xFE5
   647                           fsr1h	equ	0xFE2
   648                           fsr1l	equ	0xFE1
   649                           
   650                           	psect	cstackCOMRAM
   651  000001                     __pcstackCOMRAM:
   652                           	opt stack 0
   653  000001                     ??i2_flashlight:
   654  000001                     ?i2___awmod:
   655                           	opt stack 0
   656  000001                     i2ReadByte@status:
   657                           	opt stack 0
   658  000001                     i2WriteNibble@data:
   659                           	opt stack 0
   660  000001                     i2___awmod@dividend:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x0
   664  000001                     	ds	1
   665  000002                     ??i2_WriteNibble:
   666  000002                     i2WaitLCD@status:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x1
   670  000002                     	ds	1
   671  000003                     i2WriteNibble@cmd:
   672                           	opt stack 0
   673  000003                     i2___awmod@divisor:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x2
   677  000003                     	ds	1
   678  000004                     i2WriteByte@data:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x3
   682  000004                     	ds	1
   683  000005                     i2WriteByte@cmd:
   684                           	opt stack 0
   685  000005                     i2___awmod@counter:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x4
   689  000005                     	ds	1
   690  000006                     i2LCDGoto@row:
   691                           	opt stack 0
   692  000006                     i2LCDPutChar@data:
   693                           	opt stack 0
   694  000006                     i2___awmod@sign:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x5
   698  000006                     	ds	1
   699  000007                     ??i2_LCDGoto:
   700  000007                     ?i2___awdiv:
   701                           	opt stack 0
   702  000007                     i2LCDWriteStr@string:
   703                           	opt stack 0
   704  000007                     i2___awdiv@dividend:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x6
   708  000007                     	ds	2
   709  000009                     ??i2_LCDWriteStr:
   710  000009                     i2_LCDGoto$670:
   711                           	opt stack 0
   712  000009                     i2___awdiv@divisor:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x8
   716  000009                     	ds	2
   717  00000B                     i2LCDGoto@column:
   718                           	opt stack 0
   719  00000B                     i2LCDWriteStr@i:
   720                           	opt stack 0
   721  00000B                     i2___awdiv@counter:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0xA
   725  00000B                     	ds	1
   726  00000C                     i2___awdiv@sign:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0xB
   730  00000C                     	ds	1
   731  00000D                     i2___awdiv@quotient:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0xC
   735  00000D                     	ds	2
   736  00000F                     ??i2_searched:
   737  00000F                     i2LCDWriteInt@row:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0xE
   741  00000F                     	ds	1
   742  000010                     i2LCDWriteInt@value:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0xF
   746  000010                     	ds	1
   747  000011                     i2LCDWriteInt@string:
   748                           	opt stack 0
   749                           
   750                           ; 3 bytes @ 0x10
   751  000011                     	ds	1
   752  000012                     i2searched@i:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x11
   756  000012                     	ds	2
   757  000014                     i2LCDWriteInt@column:
   758                           	opt stack 0
   759  000014                     i2searched@max_time:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x13
   763  000014                     	ds	1
   764  000015                     
   765                           ; 1 bytes @ 0x14
   766  000015                     	ds	1
   767  000016                     i2searched@time:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x15
   771  000016                     	ds	2
   772  000018                     ??_ISR:
   773                           
   774                           ; 1 bytes @ 0x17
   775  000018                     	ds	15
   776  000027                     ISR@i:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x26
   780  000027                     	ds	2
   781  000029                     ??_flashlight:
   782  000029                     ?___awmod:
   783                           	opt stack 0
   784  000029                     ReadByte@status:
   785                           	opt stack 0
   786  000029                     WriteNibble@data:
   787                           	opt stack 0
   788  000029                     ___awmod@dividend:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x28
   792  000029                     	ds	1
   793  00002A                     ??_WriteNibble:
   794  00002A                     WaitLCD@status:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x29
   798  00002A                     	ds	1
   799  00002B                     WriteNibble@cmd:
   800                           	opt stack 0
   801  00002B                     ___awmod@divisor:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x2A
   805  00002B                     	ds	1
   806  00002C                     ??_LCDInit:
   807  00002C                     WriteByte@data:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x2B
   811  00002C                     	ds	1
   812  00002D                     WriteByte@cmd:
   813                           	opt stack 0
   814  00002D                     ___awmod@counter:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x2C
   818  00002D                     	ds	1
   819  00002E                     ??_LCDClear:
   820  00002E                     LCDGoto@row:
   821                           	opt stack 0
   822  00002E                     LCDPutChar@data:
   823                           	opt stack 0
   824  00002E                     ___awmod@sign:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x2D
   828  00002E                     	ds	1
   829  00002F                     ??_LCDGoto:
   830  00002F                     ?___awdiv:
   831                           	opt stack 0
   832  00002F                     LCDWriteStr@string:
   833                           	opt stack 0
   834  00002F                     ___awdiv@dividend:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x2E
   838  00002F                     	ds	2
   839  000031                     ??_LCDWriteStr:
   840  000031                     _LCDGoto$670:
   841                           	opt stack 0
   842  000031                     ___awdiv@divisor:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x30
   846  000031                     	ds	2
   847  000033                     LCDGoto@column:
   848                           	opt stack 0
   849  000033                     LCDWriteStr@i:
   850                           	opt stack 0
   851  000033                     ___awdiv@counter:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x32
   855  000033                     	ds	1
   856  000034                     ___awdiv@sign:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x33
   860  000034                     	ds	1
   861  000035                     ___awdiv@quotient:
   862                           	opt stack 0
   863                           
   864                           ; 2 bytes @ 0x34
   865  000035                     	ds	2
   866  000037                     tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           postinc0	equ	0xFEE
   871                           postdec1	equ	0xFE5
   872                           fsr1h	equ	0xFE2
   873                           fsr1l	equ	0xFE1
   874                           
   875                           ; 1 bytes @ 0x36
   876 ;;
   877 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   878 ;;
   879 ;; *************** function _main *****************
   880 ;; Defined at:
   881 ;;		line 320 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  argc            2    9[BANK0 ] int 
   884 ;;  argv            3   11[BANK0 ] PTR PTR unsigned char 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  2    9[BANK0 ] int 
   889 ;; Registers used:
   890 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   896 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;Total ram usage:        5 bytes
   901 ;; Hardware stack levels required when called:   16
   902 ;; This function calls:
   903 ;;		_searched
   904 ;;		_setup
   905 ;; This function is called by:
   906 ;;		Startup code after reset
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text0
   911  001AC2                     __ptext0:
   912                           	opt stack 0
   913  001AC2                     _main:
   914                           	opt stack 15
   915                           
   916                           ;main.c: 322: setup();
   917                           
   918                           ;incstack = 0
   919  001AC2  ECF9  F00A         	call	_setup	;wreg free
   920                           
   921                           ;main.c: 324: searched();
   922  001AC6  EC2D  F009         	call	_searched	;wreg free
   923  001ACA                     l84:
   924  001ACA  D7FF               	goto	l84
   925  001ACC                     __end_of_main:
   926                           	opt stack 0
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           postinc0	equ	0xFEE
   932                           postdec1	equ	0xFE5
   933                           fsr1h	equ	0xFE2
   934                           fsr1l	equ	0xFE1
   935                           
   936 ;; *************** function _setup *****************
   937 ;; Defined at:
   938 ;;		line 89 in file "main.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:   15
   959 ;; This function calls:
   960 ;;		_init_debug
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text1
   967  0015F2                     __ptext1:
   968                           	opt stack 0
   969  0015F2                     _setup:
   970                           	opt stack 15
   971                           
   972                           ;main.c: 91: init_debug();
   973                           
   974                           ;incstack = 0
   975  0015F2  ECC7  F00C         	call	_init_debug	;wreg free
   976                           
   977                           ;main.c: 94: INTCON2bits.INTEDG0 = 1;
   978  0015F6  8CF1               	bsf	intcon2,6,c	;volatile
   979                           
   980                           ;main.c: 95: INTCONbits.INT0IF = 0 ;
   981  0015F8  92F2               	bcf	intcon,1,c	;volatile
   982                           
   983                           ;main.c: 96: TRISBbits.TRISB0 = 0;
   984  0015FA  9093               	bcf	3987,0,c	;volatile
   985                           
   986                           ;main.c: 97: LATBbits.LATB0 = 0;
   987  0015FC  908A               	bcf	3978,0,c	;volatile
   988                           
   989                           ;main.c: 98: TRISBbits.TRISB0 = 1;
   990  0015FE  8093               	bsf	3987,0,c	;volatile
   991                           
   992                           ;main.c: 99: ANSELBbits.ANSB0 = 0;
   993  001600  010F               	movlb	15	; () banked
   994  001602  9139               	bcf	57,0,b	;volatile
   995                           
   996                           ; BSR set to: 15
   997                           ;main.c: 100: INTCONbits.INT0E = 1 ;
   998  001604  88F2               	bsf	intcon,4,c	;volatile
   999                           
  1000                           ; BSR set to: 15
  1001                           ;main.c: 103: INTCON2bits.INTEDG1 = 1;
  1002  001606  8AF1               	bsf	intcon2,5,c	;volatile
  1003                           
  1004                           ; BSR set to: 15
  1005                           ;main.c: 104: INTCON3bits.INT1IF = 0 ;
  1006  001608  90F0               	bcf	intcon3,0,c	;volatile
  1007                           
  1008                           ; BSR set to: 15
  1009                           ;main.c: 105: TRISBbits.TRISB1 = 0;
  1010  00160A  9293               	bcf	3987,1,c	;volatile
  1011                           
  1012                           ; BSR set to: 15
  1013                           ;main.c: 106: LATBbits.LATB1 = 0;
  1014  00160C  928A               	bcf	3978,1,c	;volatile
  1015                           
  1016                           ; BSR set to: 15
  1017                           ;main.c: 107: TRISBbits.TRISB1 = 1;
  1018  00160E  8293               	bsf	3987,1,c	;volatile
  1019                           
  1020                           ; BSR set to: 15
  1021                           ;main.c: 108: ANSELBbits.ANSB1 = 0;
  1022  001610  010F               	movlb	15	; () banked
  1023  001612  9339               	bcf	57,1,b	;volatile
  1024                           
  1025                           ; BSR set to: 15
  1026                           ;main.c: 109: INTCON3bits.INT1E = 1 ;
  1027  001614  86F0               	bsf	intcon3,3,c	;volatile
  1028                           
  1029                           ; BSR set to: 15
  1030                           ;main.c: 112: INTCON2bits.INTEDG2 = 1;
  1031  001616  88F1               	bsf	intcon2,4,c	;volatile
  1032                           
  1033                           ; BSR set to: 15
  1034                           ;main.c: 113: INTCON3bits.INT2IF = 0 ;
  1035  001618  92F0               	bcf	intcon3,1,c	;volatile
  1036                           
  1037                           ; BSR set to: 15
  1038                           ;main.c: 114: TRISBbits.TRISB2 = 0;
  1039  00161A  9493               	bcf	3987,2,c	;volatile
  1040                           
  1041                           ; BSR set to: 15
  1042                           ;main.c: 115: LATBbits.LATB2 = 0;
  1043  00161C  948A               	bcf	3978,2,c	;volatile
  1044                           
  1045                           ; BSR set to: 15
  1046                           ;main.c: 116: TRISBbits.TRISB2 = 1;
  1047  00161E  8493               	bsf	3987,2,c	;volatile
  1048                           
  1049                           ; BSR set to: 15
  1050                           ;main.c: 117: ANSELBbits.ANSB2 = 0;
  1051  001620  010F               	movlb	15	; () banked
  1052  001622  9539               	bcf	57,2,b	;volatile
  1053                           
  1054                           ; BSR set to: 15
  1055                           ;main.c: 118: INTCON3bits.INT2E = 1 ;
  1056  001624  88F0               	bsf	intcon3,4,c	;volatile
  1057                           
  1058                           ; BSR set to: 15
  1059                           ;main.c: 121: TRISCbits.RC1 = 0 ;
  1060  001626  9294               	bcf	3988,1,c	;volatile
  1061                           
  1062                           ; BSR set to: 15
  1063                           ;main.c: 122: LATCbits.LATC1 = 0 ;
  1064  001628  928B               	bcf	3979,1,c	;volatile
  1065                           
  1066                           ; BSR set to: 15
  1067                           ;main.c: 125: T2CONbits.T2OUTPS = 0 ;
  1068  00162A  96BA               	bcf	4026,3,c	;volatile
  1069  00162C  98BA               	bcf	4026,4,c	;volatile
  1070  00162E  9ABA               	bcf	4026,5,c	;volatile
  1071  001630  9CBA               	bcf	4026,6,c	;volatile
  1072                           
  1073                           ; BSR set to: 15
  1074                           ;main.c: 126: T2CONbits.T2CKPS = 0b10 ;
  1075  001632  50BA               	movf	4026,w,c	;volatile
  1076  001634  0BFC               	andlw	-4
  1077  001636  0902               	iorlw	2
  1078  001638  6EBA               	movwf	4026,c	;volatile
  1079                           
  1080                           ; BSR set to: 15
  1081                           ;main.c: 127: T2CONbits.TMR2ON = 1 ;
  1082  00163A  84BA               	bsf	4026,2,c	;volatile
  1083                           
  1084                           ; BSR set to: 15
  1085                           ;main.c: 130: TRISCbits.RC2 = 0;
  1086  00163C  9494               	bcf	3988,2,c	;volatile
  1087                           
  1088                           ; BSR set to: 15
  1089                           ;main.c: 131: CCP1CONbits.P1M = 0 ;
  1090  00163E  0E3F               	movlw	-193
  1091  001640  16BD               	andwf	4029,f,c	;volatile
  1092                           
  1093                           ; BSR set to: 15
  1094                           ;main.c: 132: CCP1CONbits.DC1B = 0 ;
  1095  001642  0ECF               	movlw	-49
  1096  001644  16BD               	andwf	4029,f,c	;volatile
  1097                           
  1098                           ; BSR set to: 15
  1099                           ;main.c: 133: CCP1CONbits.CCP1M = 0b1100 ;
  1100  001646  50BD               	movf	4029,w,c	;volatile
  1101  001648  0BF0               	andlw	-16
  1102  00164A  090C               	iorlw	12
  1103  00164C  6EBD               	movwf	4029,c	;volatile
  1104                           
  1105                           ; BSR set to: 15
  1106                           ;main.c: 134: CCPR1Lbits.CCPR1L = 0 ;
  1107  00164E  0E00               	movlw	0
  1108  001650  6EBE               	movwf	4030,c	;volatile
  1109                           
  1110                           ; BSR set to: 15
  1111                           ;main.c: 137: INTCONbits.PEIE = 1;
  1112  001652  8CF2               	bsf	intcon,6,c	;volatile
  1113                           
  1114                           ; BSR set to: 15
  1115                           ;main.c: 138: INTCONbits.GIE = 1 ;
  1116  001654  8EF2               	bsf	intcon,7,c	;volatile
  1117                           
  1118                           ; BSR set to: 15
  1119                           ;main.c: 141: steps = 0;
  1120  001656  0E00               	movlw	0
  1121  001658  0100               	movlb	0	; () banked
  1122  00165A  6F6F               	movwf	(_steps+1)& (0+255),b
  1123  00165C  0E00               	movlw	0
  1124  00165E  6F6E               	movwf	_steps& (0+255),b
  1125                           
  1126                           ; BSR set to: 0
  1127  001660  0012               	return		;funcret
  1128  001662                     __end_of_setup:
  1129                           	opt stack 0
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           intcon	equ	0xFF2
  1135                           intcon2	equ	0xFF1
  1136                           intcon3	equ	0xFF0
  1137                           postinc0	equ	0xFEE
  1138                           postdec1	equ	0xFE5
  1139                           fsr1h	equ	0xFE2
  1140                           fsr1l	equ	0xFE1
  1141                           
  1142 ;; *************** function _init_debug *****************
  1143 ;; Defined at:
  1144 ;;		line 80 in file "main.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:   14
  1165 ;; This function calls:
  1166 ;;		_LCDClear
  1167 ;;		_LCDGoto
  1168 ;;		_LCDInit
  1169 ;;		_LCDWriteStr
  1170 ;;		_show_debug
  1171 ;; This function is called by:
  1172 ;;		_setup
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text2
  1177  00198E                     __ptext2:
  1178                           	opt stack 0
  1179  00198E                     _init_debug:
  1180                           	opt stack 15
  1181                           
  1182                           ;main.c: 81: LCDInit();
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;incstack = 0
  1186  00198E  ECB9  F008         	call	_LCDInit	;wreg free
  1187                           
  1188                           ;main.c: 82: LCDClear();
  1189  001992  ECD9  F00C         	call	_LCDClear	;wreg free
  1190                           
  1191                           ;main.c: 83: LCDGoto(0, 0);
  1192  001996  0E00               	movlw	0
  1193  001998  6E2E               	movwf	LCDGoto@row,c
  1194  00199A  0E00               	movlw	0
  1195  00199C  EC5D  F00C         	call	_LCDGoto
  1196                           
  1197                           ;main.c: 84: LCDWriteStr("Nombre pas");
  1198  0019A0  0E12               	movlw	low STR_1
  1199  0019A2  6E2F               	movwf	LCDWriteStr@string,c
  1200  0019A4  0E10               	movlw	high STR_1
  1201  0019A6  6E30               	movwf	LCDWriteStr@string+1,c
  1202  0019A8  EC79  F00A         	call	_LCDWriteStr	;wreg free
  1203                           
  1204                           ;main.c: 85: show_debug();
  1205  0019AC  EC1F  F00D         	call	_show_debug	;wreg free
  1206  0019B0  0012               	return		;funcret
  1207  0019B2                     __end_of_init_debug:
  1208                           	opt stack 0
  1209                           tblptru	equ	0xFF8
  1210                           tblptrh	equ	0xFF7
  1211                           tblptrl	equ	0xFF6
  1212                           tablat	equ	0xFF5
  1213                           intcon	equ	0xFF2
  1214                           intcon2	equ	0xFF1
  1215                           intcon3	equ	0xFF0
  1216                           postinc0	equ	0xFEE
  1217                           postdec1	equ	0xFE5
  1218                           fsr1h	equ	0xFE2
  1219                           fsr1l	equ	0xFE1
  1220                           
  1221 ;; *************** function _show_debug *****************
  1222 ;; Defined at:
  1223 ;;		line 75 in file "main.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; Hardware stack levels required when called:   13
  1244 ;; This function calls:
  1245 ;;		_LCDWriteInt
  1246 ;; This function is called by:
  1247 ;;		_init_debug
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text3
  1252  001A3E                     __ptext3:
  1253                           	opt stack 0
  1254  001A3E                     _show_debug:
  1255                           	opt stack 15
  1256                           
  1257                           ;main.c: 76: LCDWriteInt(0, 1, steps);
  1258                           
  1259                           ;incstack = 0
  1260  001A3E  0E01               	movlw	1
  1261  001A40  0100               	movlb	0	; () banked
  1262  001A42  6F60               	movwf	LCDWriteInt@row& (0+255),b
  1263  001A44  C06E  F061         	movff	_steps,LCDWriteInt@value
  1264  001A48  0E00               	movlw	0
  1265  001A4A  ECA1  F00B         	call	_LCDWriteInt
  1266  001A4E  0012               	return		;funcret
  1267  001A50                     __end_of_show_debug:
  1268                           	opt stack 0
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           intcon	equ	0xFF2
  1274                           intcon2	equ	0xFF1
  1275                           intcon3	equ	0xFF0
  1276                           postinc0	equ	0xFEE
  1277                           postdec1	equ	0xFE5
  1278                           fsr1h	equ	0xFE2
  1279                           fsr1l	equ	0xFE1
  1280                           
  1281 ;; *************** function _LCDWriteInt *****************
  1282 ;; Defined at:
  1283 ;;		line 229 in file "lcd.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  column          1    wreg     unsigned char 
  1286 ;;  row             1    0[BANK0 ] unsigned char 
  1287 ;;  value           1    1[BANK0 ] unsigned char 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  column          1    2[BANK0 ] unsigned char 
  1290 ;;  string          3    3[BANK0 ] unsigned char [3]
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:        6 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:   12
  1307 ;; This function calls:
  1308 ;;		_LCDGoto
  1309 ;;		_LCDWriteStr
  1310 ;;		___awdiv
  1311 ;;		___awmod
  1312 ;; This function is called by:
  1313 ;;		_show_debug
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text4
  1318  001742                     __ptext4:
  1319                           	opt stack 0
  1320  001742                     _LCDWriteInt:
  1321                           	opt stack 15
  1322                           
  1323                           ;incstack = 0
  1324                           ;LCDWriteInt@column stored from wreg
  1325  001742  0100               	movlb	0	; () banked
  1326  001744  6F62               	movwf	LCDWriteInt@column& (0+255),b
  1327                           
  1328                           ;lcd.c: 230: char string[3];
  1329                           ;lcd.c: 232: string[0] = value / 10 + '0';
  1330  001746  C061  F02F         	movff	LCDWriteInt@value,___awdiv@dividend
  1331  00174A  6A30               	clrf	___awdiv@dividend+1,c
  1332  00174C  0E00               	movlw	0
  1333  00174E  6E32               	movwf	___awdiv@divisor+1,c
  1334  001750  0E0A               	movlw	10
  1335  001752  6E31               	movwf	___awdiv@divisor,c
  1336  001754  ECF5  F009         	call	___awdiv	;wreg free
  1337  001758  502F               	movf	?___awdiv,w,c
  1338  00175A  0F30               	addlw	48
  1339  00175C  0100               	movlb	0	; () banked
  1340  00175E  6F63               	movwf	LCDWriteInt@string& (0+255),b
  1341                           
  1342                           ;lcd.c: 233: string[1] = value % 10 + '0';
  1343  001760  C061  F029         	movff	LCDWriteInt@value,___awmod@dividend
  1344  001764  6A2A               	clrf	___awmod@dividend+1,c
  1345  001766  0E00               	movlw	0
  1346  001768  6E2C               	movwf	___awmod@divisor+1,c
  1347  00176A  0E0A               	movlw	10
  1348  00176C  6E2B               	movwf	___awmod@divisor,c
  1349  00176E  EC31  F00B         	call	___awmod	;wreg free
  1350  001772  5029               	movf	?___awmod,w,c
  1351  001774  0F30               	addlw	48
  1352  001776  0100               	movlb	0	; () banked
  1353  001778  6F64               	movwf	(LCDWriteInt@string+1)& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;lcd.c: 234: string[2] = '\0';
  1357  00177A  0E00               	movlw	0
  1358  00177C  0100               	movlb	0	; () banked
  1359  00177E  6F65               	movwf	(LCDWriteInt@string+2)& (0+255),b
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;lcd.c: 236: LCDGoto(column, row);
  1363  001780  C060  F02E         	movff	LCDWriteInt@row,LCDGoto@row
  1364  001784  0100               	movlb	0	; () banked
  1365  001786  5162               	movf	LCDWriteInt@column& (0+255),w,b
  1366  001788  EC5D  F00C         	call	_LCDGoto
  1367                           
  1368                           ;lcd.c: 237: LCDWriteStr(string);
  1369  00178C  0E63               	movlw	low LCDWriteInt@string
  1370  00178E  6E2F               	movwf	LCDWriteStr@string,c
  1371  001790  0E00               	movlw	high LCDWriteInt@string
  1372  001792  6E30               	movwf	LCDWriteStr@string+1,c
  1373  001794  EC79  F00A         	call	_LCDWriteStr	;wreg free
  1374  001798  0012               	return		;funcret
  1375  00179A                     __end_of_LCDWriteInt:
  1376                           	opt stack 0
  1377                           tblptru	equ	0xFF8
  1378                           tblptrh	equ	0xFF7
  1379                           tblptrl	equ	0xFF6
  1380                           tablat	equ	0xFF5
  1381                           intcon	equ	0xFF2
  1382                           intcon2	equ	0xFF1
  1383                           intcon3	equ	0xFF0
  1384                           postinc0	equ	0xFEE
  1385                           postdec1	equ	0xFE5
  1386                           fsr1h	equ	0xFE2
  1387                           fsr1l	equ	0xFE1
  1388                           
  1389 ;; *************** function _LCDWriteStr *****************
  1390 ;; Defined at:
  1391 ;;		line 193 in file "lcd.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  string          2   46[COMRAM] PTR const unsigned char 
  1394 ;;		 -> LCDWriteInt@string(3), LCDWriteFloat@string(5), LCDWriteHexa@string(3), STR_1(11), 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  i               1   50[COMRAM] unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;Total ram usage:        5 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:   11
  1413 ;; This function calls:
  1414 ;;		_LCDPutChar
  1415 ;; This function is called by:
  1416 ;;		_init_debug
  1417 ;;		_LCDWriteInt
  1418 ;;		_LCDWriteHexa
  1419 ;;		_LCDWriteFloat
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text5
  1424  0014F2                     __ptext5:
  1425                           	opt stack 0
  1426  0014F2                     _LCDWriteStr:
  1427                           	opt stack 15
  1428                           
  1429                           ;lcd.c: 195: UINT8_T i = 0;
  1430                           
  1431                           ;incstack = 0
  1432  0014F2  0E00               	movlw	0
  1433  0014F4  6E33               	movwf	LCDWriteStr@i,c
  1434                           
  1435                           ;lcd.c: 197: while (string[i])
  1436  0014F6  D01E               	goto	l1478
  1437  0014F8                     l1474:
  1438                           
  1439                           ;lcd.c: 198: LCDPutChar(string[i++]);
  1440  0014F8  5033               	movf	LCDWriteStr@i,w,c
  1441  0014FA  0D01               	mullw	1
  1442  0014FC  C02F  F031         	movff	LCDWriteStr@string,??_LCDWriteStr
  1443  001500  C030  F032         	movff	LCDWriteStr@string+1,??_LCDWriteStr+1
  1444  001504  50F3               	movf	prodl,w,c
  1445  001506  2631               	addwf	??_LCDWriteStr,f,c
  1446  001508  50F4               	movf	prodh,w,c
  1447  00150A  2232               	addwfc	??_LCDWriteStr+1,f,c
  1448  00150C  C031  FFF6         	movff	??_LCDWriteStr,tblptrl
  1449  001510  C032  FFF7         	movff	??_LCDWriteStr+1,tblptrh
  1450  001514  0E00               	movlw	low (__smallconst shr (0+16))
  1451  001516  6EF8               	movwf	tblptru,c
  1452  001518  0E0F               	movlw	(high __ramtop+-1)
  1453  00151A  64F7               	cpfsgt	tblptrh,c
  1454  00151C  D003               	bra	u667
  1455  00151E  0008               	tblrd		*
  1456  001520  50F5               	movf	tablat,w,c
  1457  001522  D005               	bra	u660
  1458  001524                     u667:
  1459  001524  CFF6 FFE9          	movff	tblptrl,fsr0l
  1460  001528  CFF7 FFEA          	movff	tblptrh,fsr0h
  1461  00152C  50EF               	movf	indf0,w,c
  1462  00152E                     u660:
  1463  00152E  EC28  F00D         	call	_LCDPutChar
  1464  001532  2A33               	incf	LCDWriteStr@i,f,c
  1465  001534                     l1478:
  1466  001534  5033               	movf	LCDWriteStr@i,w,c
  1467  001536  0D01               	mullw	1
  1468  001538  C02F  F031         	movff	LCDWriteStr@string,??_LCDWriteStr
  1469  00153C  C030  F032         	movff	LCDWriteStr@string+1,??_LCDWriteStr+1
  1470  001540  50F3               	movf	prodl,w,c
  1471  001542  2631               	addwf	??_LCDWriteStr,f,c
  1472  001544  50F4               	movf	prodh,w,c
  1473  001546  2232               	addwfc	??_LCDWriteStr+1,f,c
  1474  001548  C031  FFF6         	movff	??_LCDWriteStr,tblptrl
  1475  00154C  C032  FFF7         	movff	??_LCDWriteStr+1,tblptrh
  1476  001550  0E00               	movlw	low (__smallconst shr (0+16))
  1477  001552  6EF8               	movwf	tblptru,c
  1478  001554  0E0F               	movlw	(high __ramtop+-1)
  1479  001556  64F7               	cpfsgt	tblptrh,c
  1480  001558  D003               	bra	u677
  1481  00155A  0008               	tblrd		*
  1482  00155C  50F5               	movf	tablat,w,c
  1483  00155E  D005               	bra	u670
  1484  001560                     u677:
  1485  001560  CFF6 FFE9          	movff	tblptrl,fsr0l
  1486  001564  CFF7 FFEA          	movff	tblptrh,fsr0h
  1487  001568  50EF               	movf	indf0,w,c
  1488  00156A                     u670:
  1489  00156A  0900               	iorlw	0
  1490  00156C  B4D8               	btfsc	status,2,c
  1491  00156E  0012               	return	
  1492  001570  D7C3               	goto	l1474
  1493  001572                     __end_of_LCDWriteStr:
  1494                           	opt stack 0
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           prodh	equ	0xFF4
  1500                           prodl	equ	0xFF3
  1501                           intcon	equ	0xFF2
  1502                           intcon2	equ	0xFF1
  1503                           intcon3	equ	0xFF0
  1504                           indf0	equ	0xFEF
  1505                           postinc0	equ	0xFEE
  1506                           fsr0h	equ	0xFEA
  1507                           fsr0l	equ	0xFE9
  1508                           postdec1	equ	0xFE5
  1509                           fsr1h	equ	0xFE2
  1510                           fsr1l	equ	0xFE1
  1511                           status	equ	0xFD8
  1512                           
  1513 ;; *************** function _LCDPutChar *****************
  1514 ;; Defined at:
  1515 ;;		line 180 in file "lcd.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  data            1    wreg     unsigned char 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  data            1   45[COMRAM] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;Total ram usage:        1 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:   10
  1536 ;; This function calls:
  1537 ;;		_WaitLCD
  1538 ;;		_WriteByte
  1539 ;; This function is called by:
  1540 ;;		_LCDWriteStr
  1541 ;;		_LCDPutByte
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text6
  1546  001A50                     __ptext6:
  1547                           	opt stack 0
  1548  001A50                     _LCDPutChar:
  1549                           	opt stack 15
  1550                           
  1551                           ;incstack = 0
  1552                           ;LCDPutChar@data stored from wreg
  1553  001A50  6E2E               	movwf	LCDPutChar@data,c
  1554                           
  1555                           ;lcd.c: 182: WriteByte(0, data);
  1556  001A52  C02E  F02C         	movff	LCDPutChar@data,WriteByte@data
  1557  001A56  0E00               	movlw	0
  1558  001A58  EC05  F00D         	call	_WriteByte
  1559                           
  1560                           ;lcd.c: 183: WaitLCD();
  1561  001A5C  EC31  F00D         	call	_WaitLCD	;wreg free
  1562  001A60  0012               	return		;funcret
  1563  001A62                     __end_of_LCDPutChar:
  1564                           	opt stack 0
  1565                           tblptru	equ	0xFF8
  1566                           tblptrh	equ	0xFF7
  1567                           tblptrl	equ	0xFF6
  1568                           tablat	equ	0xFF5
  1569                           prodh	equ	0xFF4
  1570                           prodl	equ	0xFF3
  1571                           intcon	equ	0xFF2
  1572                           intcon2	equ	0xFF1
  1573                           intcon3	equ	0xFF0
  1574                           indf0	equ	0xFEF
  1575                           postinc0	equ	0xFEE
  1576                           fsr0h	equ	0xFEA
  1577                           fsr0l	equ	0xFE9
  1578                           postdec1	equ	0xFE5
  1579                           fsr1h	equ	0xFE2
  1580                           fsr1l	equ	0xFE1
  1581                           status	equ	0xFD8
  1582                           
  1583 ;; *************** function _LCDGoto *****************
  1584 ;; Defined at:
  1585 ;;		line 171 in file "lcd.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  column          1    wreg     unsigned char 
  1588 ;;  row             1   45[COMRAM] unsigned char 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  column          1   50[COMRAM] unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1600 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;Total ram usage:        6 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:   10
  1607 ;; This function calls:
  1608 ;;		_WaitLCD
  1609 ;;		_WriteByte
  1610 ;; This function is called by:
  1611 ;;		_init_debug
  1612 ;;		_LCDWriteInt
  1613 ;;		_LCDWriteHexa
  1614 ;;		_LCDWriteFloat
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text7
  1619  0018BA                     __ptext7:
  1620                           	opt stack 0
  1621  0018BA                     _LCDGoto:
  1622                           	opt stack 16
  1623                           
  1624                           ;incstack = 0
  1625                           ;LCDGoto@column stored from wreg
  1626  0018BA  6E33               	movwf	LCDGoto@column,c
  1627                           
  1628                           ;lcd.c: 173: if ((row > (2 - 1)) || (column > (16 - 1)))
  1629  0018BC  0E02               	movlw	2
  1630  0018BE  602E               	cpfslt	LCDGoto@row,c
  1631  0018C0  0012               	return	
  1632  0018C2  0E0F               	movlw	15
  1633  0018C4  6433               	cpfsgt	LCDGoto@column,c
  1634  0018C6  D001               	goto	l1462
  1635  0018C8  0012               	return	
  1636  0018CA                     l1462:
  1637                           
  1638                           ;lcd.c: 176: WriteByte(1, (row == 1) ? (0xC0 | column) : (0x80 | column));
  1639  0018CA  042E               	decf	LCDGoto@row,w,c
  1640  0018CC  B4D8               	btfsc	status,2,c
  1641  0018CE  D002               	goto	l1466
  1642  0018D0  0E80               	movlw	128
  1643  0018D2  D001               	goto	L1
  1644  0018D4                     l1466:
  1645  0018D4  0EC0               	movlw	192
  1646  0018D6                     L1:
  1647  0018D6  C033  F02F         	movff	LCDGoto@column,??_LCDGoto
  1648  0018DA  6A30               	clrf	(??_LCDGoto+1)& (0+255),c
  1649  0018DC  102F               	iorwf	??_LCDGoto,w,c
  1650  0018DE  6E31               	movwf	_LCDGoto$670,c
  1651  0018E0  5030               	movf	??_LCDGoto+1,w,c
  1652  0018E2  6E32               	movwf	_LCDGoto$670+1,c
  1653  0018E4  C031  F02C         	movff	_LCDGoto$670,WriteByte@data
  1654  0018E8  0E01               	movlw	1
  1655  0018EA  EC05  F00D         	call	_WriteByte
  1656                           
  1657                           ;lcd.c: 177: WaitLCD();
  1658  0018EE  EC31  F00D         	call	_WaitLCD	;wreg free
  1659  0018F2  0012               	return		;funcret
  1660  0018F4                     __end_of_LCDGoto:
  1661                           	opt stack 0
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           prodh	equ	0xFF4
  1667                           prodl	equ	0xFF3
  1668                           intcon	equ	0xFF2
  1669                           intcon2	equ	0xFF1
  1670                           intcon3	equ	0xFF0
  1671                           indf0	equ	0xFEF
  1672                           postinc0	equ	0xFEE
  1673                           fsr0h	equ	0xFEA
  1674                           fsr0l	equ	0xFE9
  1675                           postdec1	equ	0xFE5
  1676                           fsr1h	equ	0xFE2
  1677                           fsr1l	equ	0xFE1
  1678                           status	equ	0xFD8
  1679                           
  1680 ;; *************** function _LCDInit *****************
  1681 ;; Defined at:
  1682 ;;		line 89 in file "lcd.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;Total ram usage:        1 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:   10
  1703 ;; This function calls:
  1704 ;;		_WaitLCD
  1705 ;;		_WriteNibble
  1706 ;; This function is called by:
  1707 ;;		_init_debug
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text8
  1712  001172                     __ptext8:
  1713                           	opt stack 0
  1714  001172                     _LCDInit:
  1715                           	opt stack 18
  1716                           
  1717                           ;lcd.c: 91: TRISDbits.TRISD7 = 0;
  1718                           
  1719                           ;incstack = 0
  1720  001172  9E95               	bcf	3989,7,c	;volatile
  1721                           
  1722                           ;lcd.c: 92: TRISDbits.TRISD6 = 0;
  1723  001174  9C95               	bcf	3989,6,c	;volatile
  1724                           
  1725                           ;lcd.c: 93: TRISDbits.TRISD5 = 0;
  1726  001176  9A95               	bcf	3989,5,c	;volatile
  1727                           
  1728                           ;lcd.c: 94: TRISDbits.TRISD4 = 0;
  1729  001178  9895               	bcf	3989,4,c	;volatile
  1730                           
  1731                           ;lcd.c: 95: TRISDbits.TRISD0 = 0;
  1732  00117A  9095               	bcf	3989,0,c	;volatile
  1733                           
  1734                           ;lcd.c: 96: TRISDbits.TRISD1 = 0;
  1735  00117C  9295               	bcf	3989,1,c	;volatile
  1736                           
  1737                           ;lcd.c: 97: TRISDbits.TRISD2 = 0;
  1738  00117E  9495               	bcf	3989,2,c	;volatile
  1739                           
  1740                           ;lcd.c: 98: TRISDbits.TRISD3 = 0;
  1741  001180  9695               	bcf	3989,3,c	;volatile
  1742                           
  1743                           ;lcd.c: 136: LATDbits.LATD7 = 1;
  1744  001182  8E8C               	bsf	3980,7,c	;volatile
  1745                           
  1746                           ;lcd.c: 137: _delay(30000);
  1747  001184  0E27               	movlw	39
  1748  001186  6E2C               	movwf	??_LCDInit& (0+255),c
  1749  001188  0EF5               	movlw	245
  1750  00118A                     u1137:
  1751  00118A  2EE8               	decfsz	wreg,f,c
  1752  00118C  D7FE               	bra	u1137
  1753  00118E  2E2C               	decfsz	??_LCDInit& (0+255),f,c
  1754  001190  D7FC               	bra	u1137
  1755  001192  F000               	nop	
  1756                           
  1757                           ;lcd.c: 138: WriteNibble(1, 0x03);
  1758  001194  0E03               	movlw	3
  1759  001196  6E29               	movwf	WriteNibble@data,c
  1760  001198  0E01               	movlw	1
  1761  00119A  EC19  F00C         	call	_WriteNibble
  1762                           
  1763                           ;lcd.c: 139: _delay(3000);
  1764  00119E  0E04               	movlw	4
  1765  0011A0  6E2C               	movwf	??_LCDInit& (0+255),c
  1766  0011A2  0EE4               	movlw	228
  1767  0011A4                     u1147:
  1768  0011A4  2EE8               	decfsz	wreg,f,c
  1769  0011A6  D7FE               	bra	u1147
  1770  0011A8  2E2C               	decfsz	??_LCDInit& (0+255),f,c
  1771  0011AA  D7FC               	bra	u1147
  1772  0011AC  D000               	nop2	
  1773                           
  1774                           ;lcd.c: 140: WriteNibble(1, 0x03);
  1775  0011AE  0E03               	movlw	3
  1776  0011B0  6E29               	movwf	WriteNibble@data,c
  1777  0011B2  0E01               	movlw	1
  1778  0011B4  EC19  F00C         	call	_WriteNibble
  1779                           
  1780                           ;lcd.c: 141: _delay(100);
  1781  0011B8  0E21               	movlw	33
  1782  0011BA                     u1157:
  1783  0011BA  2EE8               	decfsz	wreg,f,c
  1784  0011BC  D7FE               	bra	u1157
  1785  0011BE  F000               	nop	
  1786                           
  1787                           ;lcd.c: 142: WriteNibble(1, 0x03);
  1788  0011C0  0E03               	movlw	3
  1789  0011C2  6E29               	movwf	WriteNibble@data,c
  1790  0011C4  0E01               	movlw	1
  1791  0011C6  EC19  F00C         	call	_WriteNibble
  1792                           
  1793                           ;lcd.c: 143: _delay(100);
  1794  0011CA  0E21               	movlw	33
  1795  0011CC                     u1167:
  1796  0011CC  2EE8               	decfsz	wreg,f,c
  1797  0011CE  D7FE               	bra	u1167
  1798  0011D0  F000               	nop	
  1799                           
  1800                           ;lcd.c: 144: WriteNibble(1, 0b00000010);
  1801  0011D2  0E02               	movlw	2
  1802  0011D4  6E29               	movwf	WriteNibble@data,c
  1803  0011D6  0E01               	movlw	1
  1804  0011D8  EC19  F00C         	call	_WriteNibble
  1805                           
  1806                           ;lcd.c: 145: WaitLCD();
  1807  0011DC  EC31  F00D         	call	_WaitLCD	;wreg free
  1808                           
  1809                           ;lcd.c: 146: WriteNibble(1, 0b00000010);
  1810  0011E0  0E02               	movlw	2
  1811  0011E2  6E29               	movwf	WriteNibble@data,c
  1812  0011E4  0E01               	movlw	1
  1813  0011E6  EC19  F00C         	call	_WriteNibble
  1814                           
  1815                           ;lcd.c: 147: WriteNibble(1, 0b00001000);
  1816  0011EA  0E08               	movlw	8
  1817  0011EC  6E29               	movwf	WriteNibble@data,c
  1818  0011EE  0E01               	movlw	1
  1819  0011F0  EC19  F00C         	call	_WriteNibble
  1820                           
  1821                           ;lcd.c: 148: WaitLCD();
  1822  0011F4  EC31  F00D         	call	_WaitLCD	;wreg free
  1823                           
  1824                           ;lcd.c: 149: WriteNibble(1, 0b00000000);
  1825  0011F8  0E00               	movlw	0
  1826  0011FA  6E29               	movwf	WriteNibble@data,c
  1827  0011FC  0E01               	movlw	1
  1828  0011FE  EC19  F00C         	call	_WriteNibble
  1829                           
  1830                           ;lcd.c: 150: WriteNibble(1, 0b00001000);
  1831  001202  0E08               	movlw	8
  1832  001204  6E29               	movwf	WriteNibble@data,c
  1833  001206  0E01               	movlw	1
  1834  001208  EC19  F00C         	call	_WriteNibble
  1835                           
  1836                           ;lcd.c: 151: WaitLCD();
  1837  00120C  EC31  F00D         	call	_WaitLCD	;wreg free
  1838                           
  1839                           ;lcd.c: 152: WriteNibble(1, 0b00000000);
  1840  001210  0E00               	movlw	0
  1841  001212  6E29               	movwf	WriteNibble@data,c
  1842  001214  0E01               	movlw	1
  1843  001216  EC19  F00C         	call	_WriteNibble
  1844                           
  1845                           ;lcd.c: 153: WriteNibble(1, 0b00001100);
  1846  00121A  0E0C               	movlw	12
  1847  00121C  6E29               	movwf	WriteNibble@data,c
  1848  00121E  0E01               	movlw	1
  1849  001220  EC19  F00C         	call	_WriteNibble
  1850                           
  1851                           ;lcd.c: 155: WaitLCD();
  1852  001224  EC31  F00D         	call	_WaitLCD	;wreg free
  1853                           
  1854                           ;lcd.c: 156: WriteNibble(1, 0b00000000);
  1855  001228  0E00               	movlw	0
  1856  00122A  6E29               	movwf	WriteNibble@data,c
  1857  00122C  0E01               	movlw	1
  1858  00122E  EC19  F00C         	call	_WriteNibble
  1859                           
  1860                           ;lcd.c: 157: WriteNibble(1, 0b00000001);
  1861  001232  0E01               	movlw	1
  1862  001234  6E29               	movwf	WriteNibble@data,c
  1863  001236  0E01               	movlw	1
  1864  001238  EC19  F00C         	call	_WriteNibble
  1865                           
  1866                           ;lcd.c: 158: WaitLCD();
  1867  00123C  EC31  F00D         	call	_WaitLCD	;wreg free
  1868                           
  1869                           ;lcd.c: 159: WriteNibble(1, 0b00000000);
  1870  001240  0E00               	movlw	0
  1871  001242  6E29               	movwf	WriteNibble@data,c
  1872  001244  0E01               	movlw	1
  1873  001246  EC19  F00C         	call	_WriteNibble
  1874                           
  1875                           ;lcd.c: 160: WriteNibble(1, 0b00000110);
  1876  00124A  0E06               	movlw	6
  1877  00124C  6E29               	movwf	WriteNibble@data,c
  1878  00124E  0E01               	movlw	1
  1879  001250  EC19  F00C         	call	_WriteNibble
  1880                           
  1881                           ;lcd.c: 161: WaitLCD();
  1882  001254  EC31  F00D         	call	_WaitLCD	;wreg free
  1883  001258  0012               	return		;funcret
  1884  00125A                     __end_of_LCDInit:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           prodh	equ	0xFF4
  1891                           prodl	equ	0xFF3
  1892                           intcon	equ	0xFF2
  1893                           intcon2	equ	0xFF1
  1894                           intcon3	equ	0xFF0
  1895                           indf0	equ	0xFEF
  1896                           postinc0	equ	0xFEE
  1897                           fsr0h	equ	0xFEA
  1898                           fsr0l	equ	0xFE9
  1899                           wreg	equ	0xFE8
  1900                           postdec1	equ	0xFE5
  1901                           fsr1h	equ	0xFE2
  1902                           fsr1l	equ	0xFE1
  1903                           status	equ	0xFD8
  1904                           
  1905 ;; *************** function _LCDClear *****************
  1906 ;; Defined at:
  1907 ;;		line 164 in file "lcd.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;Total ram usage:        1 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:   10
  1928 ;; This function calls:
  1929 ;;		_WaitLCD
  1930 ;;		_WriteByte
  1931 ;; This function is called by:
  1932 ;;		_init_debug
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text9
  1937  0019B2                     __ptext9:
  1938                           	opt stack 0
  1939  0019B2                     _LCDClear:
  1940                           	opt stack 18
  1941                           
  1942                           ;lcd.c: 166: WriteByte(1, 0x01);
  1943                           
  1944                           ;incstack = 0
  1945  0019B2  0E01               	movlw	1
  1946  0019B4  6E2C               	movwf	WriteByte@data,c
  1947  0019B6  0E01               	movlw	1
  1948  0019B8  EC05  F00D         	call	_WriteByte
  1949                           
  1950                           ;lcd.c: 167: _delay(12500);
  1951  0019BC  0E11               	movlw	17
  1952  0019BE  6E2E               	movwf	??_LCDClear& (0+255),c
  1953  0019C0  0E3A               	movlw	58
  1954  0019C2                     u1177:
  1955  0019C2  2EE8               	decfsz	wreg,f,c
  1956  0019C4  D7FE               	bra	u1177
  1957  0019C6  2E2E               	decfsz	??_LCDClear& (0+255),f,c
  1958  0019C8  D7FC               	bra	u1177
  1959  0019CA  D000               	nop2	
  1960                           
  1961                           ;lcd.c: 168: WaitLCD();
  1962  0019CC  EC31  F00D         	call	_WaitLCD	;wreg free
  1963  0019D0  0012               	return		;funcret
  1964  0019D2                     __end_of_LCDClear:
  1965                           	opt stack 0
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           prodh	equ	0xFF4
  1971                           prodl	equ	0xFF3
  1972                           intcon	equ	0xFF2
  1973                           intcon2	equ	0xFF1
  1974                           intcon3	equ	0xFF0
  1975                           indf0	equ	0xFEF
  1976                           postinc0	equ	0xFEE
  1977                           fsr0h	equ	0xFEA
  1978                           fsr0l	equ	0xFE9
  1979                           wreg	equ	0xFE8
  1980                           postdec1	equ	0xFE5
  1981                           fsr1h	equ	0xFE2
  1982                           fsr1l	equ	0xFE1
  1983                           status	equ	0xFD8
  1984                           
  1985 ;; *************** function _WriteByte *****************
  1986 ;; Defined at:
  1987 ;;		line 83 in file "lcd.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  cmd             1    wreg     unsigned char 
  1990 ;;  data            1   43[COMRAM] unsigned char 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  cmd             1   44[COMRAM] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2002 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;Total ram usage:        2 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    9
  2009 ;; This function calls:
  2010 ;;		_WriteNibble
  2011 ;; This function is called by:
  2012 ;;		_LCDClear
  2013 ;;		_LCDGoto
  2014 ;;		_LCDPutChar
  2015 ;;		_LCDShiftDisplay
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text10
  2020  001A0A                     __ptext10:
  2021                           	opt stack 0
  2022  001A0A                     _WriteByte:
  2023                           	opt stack 15
  2024                           
  2025                           ;incstack = 0
  2026                           ;WriteByte@cmd stored from wreg
  2027  001A0A  6E2D               	movwf	WriteByte@cmd,c
  2028                           
  2029                           ;lcd.c: 85: WriteNibble(cmd, data >> 4);
  2030  001A0C  382C               	swapf	WriteByte@data,w,c
  2031  001A0E  0B0F               	andlw	15
  2032  001A10  6E29               	movwf	WriteNibble@data,c
  2033  001A12  502D               	movf	WriteByte@cmd,w,c
  2034  001A14  EC19  F00C         	call	_WriteNibble
  2035                           
  2036                           ;lcd.c: 86: WriteNibble(cmd, data);
  2037  001A18  C02C  F029         	movff	WriteByte@data,WriteNibble@data
  2038  001A1C  502D               	movf	WriteByte@cmd,w,c
  2039  001A1E  EC19  F00C         	call	_WriteNibble
  2040  001A22  0012               	return		;funcret
  2041  001A24                     __end_of_WriteByte:
  2042                           	opt stack 0
  2043                           tblptru	equ	0xFF8
  2044                           tblptrh	equ	0xFF7
  2045                           tblptrl	equ	0xFF6
  2046                           tablat	equ	0xFF5
  2047                           prodh	equ	0xFF4
  2048                           prodl	equ	0xFF3
  2049                           intcon	equ	0xFF2
  2050                           intcon2	equ	0xFF1
  2051                           intcon3	equ	0xFF0
  2052                           indf0	equ	0xFEF
  2053                           postinc0	equ	0xFEE
  2054                           fsr0h	equ	0xFEA
  2055                           fsr0l	equ	0xFE9
  2056                           wreg	equ	0xFE8
  2057                           postdec1	equ	0xFE5
  2058                           fsr1h	equ	0xFE2
  2059                           fsr1l	equ	0xFE1
  2060                           status	equ	0xFD8
  2061                           
  2062 ;; *************** function _WriteNibble *****************
  2063 ;; Defined at:
  2064 ;;		line 66 in file "lcd.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  cmd             1    wreg     unsigned char 
  2067 ;;  data            1   40[COMRAM] unsigned char 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  cmd             1   42[COMRAM] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2079 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;Total ram usage:        3 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    8
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_WriteByte
  2090 ;;		_LCDInit
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text11
  2095  001832                     __ptext11:
  2096                           	opt stack 0
  2097  001832                     _WriteNibble:
  2098                           	opt stack 15
  2099                           
  2100                           ;incstack = 0
  2101                           ;WriteNibble@cmd stored from wreg
  2102  001832  6E2B               	movwf	WriteNibble@cmd,c
  2103                           
  2104                           ;lcd.c: 68: LATDbits.LATD4 = (cmd ? 0 : 1);
  2105  001834  502B               	movf	WriteNibble@cmd,w,c
  2106  001836  A4D8               	btfss	status,2,c
  2107  001838  D003               	goto	u570
  2108  00183A  6A2A               	clrf	??_WriteNibble& (0+255),c
  2109  00183C  2A2A               	incf	??_WriteNibble& (0+255),f,c
  2110  00183E  D001               	goto	u588
  2111  001840                     u570:
  2112  001840  6A2A               	clrf	??_WriteNibble& (0+255),c
  2113  001842                     u588:
  2114  001842  3A2A               	swapf	??_WriteNibble,f,c
  2115  001844  508C               	movf	3980,w,c	;volatile
  2116  001846  182A               	xorwf	??_WriteNibble,w,c
  2117  001848  0BEF               	andlw	-17
  2118  00184A  182A               	xorwf	??_WriteNibble,w,c
  2119  00184C  6E8C               	movwf	3980,c	;volatile
  2120                           
  2121                           ;lcd.c: 69: LATDbits.LATD5 = 0;
  2122  00184E  9A8C               	bcf	3980,5,c	;volatile
  2123                           
  2124                           ;lcd.c: 70: LATDbits.LATD6 = 1;
  2125  001850  8C8C               	bsf	3980,6,c	;volatile
  2126                           
  2127                           ;lcd.c: 72: LATDbits.LATD0 = LATDbits.LATD1 = LATDbits.LATD2 = LATDbits.LATD3 = 0;
  2128  001852  968C               	bcf	3980,3,c	;volatile
  2129  001854  948C               	bcf	3980,2,c	;volatile
  2130  001856  928C               	bcf	3980,1,c	;volatile
  2131  001858  908C               	bcf	3980,0,c	;volatile
  2132                           
  2133                           ;lcd.c: 73: __nop();
  2134  00185A  F000               	nop	
  2135                           
  2136                           ;lcd.c: 74: __nop();
  2137  00185C  F000               	nop	
  2138                           
  2139                           ;lcd.c: 76: LATD = (LATD & 0xF0) | (data & 0x0F);
  2140  00185E  C029  F02A         	movff	WriteNibble@data,??_WriteNibble
  2141  001862  0E0F               	movlw	15
  2142  001864  162A               	andwf	??_WriteNibble,f,c
  2143  001866  508C               	movf	3980,w,c	;volatile
  2144  001868  0BF0               	andlw	240
  2145  00186A  102A               	iorwf	??_WriteNibble,w,c
  2146  00186C  6E8C               	movwf	3980,c	;volatile
  2147                           
  2148                           ;lcd.c: 77: __nop();
  2149  00186E  F000               	nop	
  2150                           
  2151                           ;lcd.c: 78: __nop();
  2152  001870  F000               	nop	
  2153                           
  2154                           ;lcd.c: 80: LATDbits.LATD6 = 0;
  2155  001872  9C8C               	bcf	3980,6,c	;volatile
  2156  001874  0012               	return		;funcret
  2157  001876                     __end_of_WriteNibble:
  2158                           	opt stack 0
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           prodh	equ	0xFF4
  2164                           prodl	equ	0xFF3
  2165                           intcon	equ	0xFF2
  2166                           intcon2	equ	0xFF1
  2167                           intcon3	equ	0xFF0
  2168                           indf0	equ	0xFEF
  2169                           postinc0	equ	0xFEE
  2170                           fsr0h	equ	0xFEA
  2171                           fsr0l	equ	0xFE9
  2172                           wreg	equ	0xFE8
  2173                           postdec1	equ	0xFE5
  2174                           fsr1h	equ	0xFE2
  2175                           fsr1l	equ	0xFE1
  2176                           status	equ	0xFD8
  2177                           
  2178 ;; *************** function _WaitLCD *****************
  2179 ;; Defined at:
  2180 ;;		line 52 in file "lcd.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  status          1   41[COMRAM] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;Total ram usage:        1 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:    9
  2201 ;; This function calls:
  2202 ;;		_ReadByte
  2203 ;; This function is called by:
  2204 ;;		_LCDInit
  2205 ;;		_LCDClear
  2206 ;;		_LCDGoto
  2207 ;;		_LCDPutChar
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text12
  2212  001A62                     __ptext12:
  2213                           	opt stack 0
  2214  001A62                     _WaitLCD:
  2215                           	opt stack 15
  2216                           
  2217                           ;lcd.c: 54: UINT8_T status;
  2218                           ;lcd.c: 56: LATDbits.LATD4 = 0;
  2219                           
  2220                           ;incstack = 0
  2221  001A62  988C               	bcf	3980,4,c	;volatile
  2222                           
  2223                           ;lcd.c: 57: LATDbits.LATD5 = 1;
  2224  001A64  8A8C               	bsf	3980,5,c	;volatile
  2225  001A66                     l1398:
  2226                           
  2227                           ;lcd.c: 60: status = ReadByte();
  2228  001A66  EC97  F00C         	call	_ReadByte	;wreg free
  2229  001A6A  6E2A               	movwf	WaitLCD@status,c
  2230                           
  2231                           ;lcd.c: 61: } while (status & 0x80);
  2232  001A6C  BE2A               	btfsc	WaitLCD@status,7,c
  2233  001A6E  D7FB               	goto	l1398
  2234                           
  2235                           ;lcd.c: 63: LATDbits.LATD5 = 0;
  2236  001A70  9A8C               	bcf	3980,5,c	;volatile
  2237  001A72  0012               	return		;funcret
  2238  001A74                     __end_of_WaitLCD:
  2239                           	opt stack 0
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           prodh	equ	0xFF4
  2245                           prodl	equ	0xFF3
  2246                           intcon	equ	0xFF2
  2247                           intcon2	equ	0xFF1
  2248                           intcon3	equ	0xFF0
  2249                           indf0	equ	0xFEF
  2250                           postinc0	equ	0xFEE
  2251                           fsr0h	equ	0xFEA
  2252                           fsr0l	equ	0xFE9
  2253                           wreg	equ	0xFE8
  2254                           postdec1	equ	0xFE5
  2255                           fsr1h	equ	0xFE2
  2256                           fsr1l	equ	0xFE1
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _ReadByte *****************
  2260 ;; Defined at:
  2261 ;;		line 21 in file "lcd.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  status          1   40[COMRAM] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      unsigned char 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;Total ram usage:        1 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    8
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_WaitLCD
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text13
  2290  00192E                     __ptext13:
  2291                           	opt stack 0
  2292  00192E                     _ReadByte:
  2293                           	opt stack 15
  2294                           
  2295                           ;lcd.c: 23: UINT8_T status;
  2296                           ;lcd.c: 25: TRISDbits.TRISD0 = 1;
  2297                           
  2298                           ;incstack = 0
  2299  00192E  8095               	bsf	3989,0,c	;volatile
  2300                           
  2301                           ;lcd.c: 26: TRISDbits.TRISD1 = 1;
  2302  001930  8295               	bsf	3989,1,c	;volatile
  2303                           
  2304                           ;lcd.c: 27: TRISDbits.TRISD2 = 1;
  2305  001932  8495               	bsf	3989,2,c	;volatile
  2306                           
  2307                           ;lcd.c: 28: TRISDbits.TRISD3 = 1;
  2308  001934  8695               	bsf	3989,3,c	;volatile
  2309                           
  2310                           ;lcd.c: 30: LATDbits.LATD6 = 1;
  2311  001936  8C8C               	bsf	3980,6,c	;volatile
  2312                           
  2313                           ;lcd.c: 31: __nop();
  2314  001938  F000               	nop	
  2315                           
  2316                           ;lcd.c: 32: __nop();
  2317  00193A  F000               	nop	
  2318                           
  2319                           ;lcd.c: 34: status = PORTD << 4;
  2320  00193C  3883               	swapf	3971,w,c	;volatile
  2321  00193E  0BF0               	andlw	240
  2322  001940  6E29               	movwf	ReadByte@status,c
  2323                           
  2324                           ;lcd.c: 35: LATDbits.LATD6 = 0;
  2325  001942  9C8C               	bcf	3980,6,c	;volatile
  2326                           
  2327                           ;lcd.c: 37: LATDbits.LATD6 = 1;
  2328  001944  8C8C               	bsf	3980,6,c	;volatile
  2329                           
  2330                           ;lcd.c: 38: __nop();
  2331  001946  F000               	nop	
  2332                           
  2333                           ;lcd.c: 39: __nop();
  2334  001948  F000               	nop	
  2335                           
  2336                           ;lcd.c: 41: status |= PORTD & 0x0F;
  2337  00194A  5083               	movf	3971,w,c	;volatile
  2338  00194C  0B0F               	andlw	15
  2339  00194E  1229               	iorwf	ReadByte@status,f,c
  2340                           
  2341                           ;lcd.c: 42: LATDbits.LATD6 = 0;
  2342  001950  9C8C               	bcf	3980,6,c	;volatile
  2343                           
  2344                           ;lcd.c: 44: TRISDbits.TRISD0 = 0;
  2345  001952  9095               	bcf	3989,0,c	;volatile
  2346                           
  2347                           ;lcd.c: 45: TRISDbits.TRISD1 = 0;
  2348  001954  9295               	bcf	3989,1,c	;volatile
  2349                           
  2350                           ;lcd.c: 46: TRISDbits.TRISD2 = 0;
  2351  001956  9495               	bcf	3989,2,c	;volatile
  2352                           
  2353                           ;lcd.c: 47: TRISDbits.TRISD3 = 0;
  2354  001958  9695               	bcf	3989,3,c	;volatile
  2355                           
  2356                           ;lcd.c: 49: return(status);
  2357  00195A  5029               	movf	ReadByte@status,w,c
  2358  00195C  0012               	return	
  2359  00195E                     __end_of_ReadByte:
  2360                           	opt stack 0
  2361                           tblptru	equ	0xFF8
  2362                           tblptrh	equ	0xFF7
  2363                           tblptrl	equ	0xFF6
  2364                           tablat	equ	0xFF5
  2365                           prodh	equ	0xFF4
  2366                           prodl	equ	0xFF3
  2367                           intcon	equ	0xFF2
  2368                           intcon2	equ	0xFF1
  2369                           intcon3	equ	0xFF0
  2370                           indf0	equ	0xFEF
  2371                           postinc0	equ	0xFEE
  2372                           fsr0h	equ	0xFEA
  2373                           fsr0l	equ	0xFE9
  2374                           wreg	equ	0xFE8
  2375                           postdec1	equ	0xFE5
  2376                           fsr1h	equ	0xFE2
  2377                           fsr1l	equ	0xFE1
  2378                           status	equ	0xFD8
  2379                           
  2380 ;; *************** function _searched *****************
  2381 ;; Defined at:
  2382 ;;		line 265 in file "main.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  time            2    7[BANK0 ] int 
  2387 ;;  max_time        2    5[BANK0 ] int 
  2388 ;;  i               2    3[BANK0 ] int 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;Total ram usage:        9 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    9
  2405 ;; This function calls:
  2406 ;;		___awdiv
  2407 ;;		___awmod
  2408 ;;		_flashlight
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text14
  2415  00125A                     __ptext14:
  2416                           	opt stack 0
  2417  00125A                     _searched:
  2418                           	opt stack 21
  2419                           
  2420                           ;main.c: 267: int time = 0, max_time = 500, i = 0;
  2421                           
  2422                           ;incstack = 0
  2423  00125A  0E00               	movlw	0
  2424  00125C  0100               	movlb	0	; () banked
  2425  00125E  6F68               	movwf	(searched@time+1)& (0+255),b
  2426  001260  0E00               	movlw	0
  2427  001262  6F67               	movwf	searched@time& (0+255),b
  2428  001264  0E01               	movlw	1
  2429  001266  0100               	movlb	0	; () banked
  2430  001268  6F66               	movwf	(searched@max_time+1)& (0+255),b
  2431  00126A  0EF4               	movlw	244
  2432  00126C  6F65               	movwf	searched@max_time& (0+255),b
  2433  00126E  0E00               	movlw	0
  2434  001270  0100               	movlb	0	; () banked
  2435  001272  6F64               	movwf	(searched@i+1)& (0+255),b
  2436  001274  0E00               	movlw	0
  2437  001276  6F63               	movwf	searched@i& (0+255),b
  2438                           
  2439                           ;main.c: 270: while (time++ < max_time) {
  2440  001278  D03D               	goto	l1834
  2441  00127A                     l1828:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;main.c: 272: PR2bits.PR2 = kiwi_frequence[time%kiwi_length];
  2445  00127A  C067  F029         	movff	searched@time,___awmod@dividend
  2446  00127E  C068  F02A         	movff	searched@time+1,___awmod@dividend+1
  2447  001282  C070  F02B         	movff	_kiwi_length,___awmod@divisor
  2448  001286  6A2C               	clrf	___awmod@divisor+1,c
  2449  001288  EC31  F00B         	call	___awmod	;wreg free
  2450  00128C  0E71               	movlw	low _kiwi_frequence
  2451  00128E  2429               	addwf	?___awmod,w,c
  2452  001290  6ED9               	movwf	fsr2l,c
  2453  001292  0E00               	movlw	high _kiwi_frequence
  2454  001294  202A               	addwfc	?___awmod+1,w,c
  2455  001296  6EDA               	movwf	fsr2h,c
  2456  001298  50DF               	movf	indf2,w,c
  2457  00129A  6EBB               	movwf	4027,c	;volatile
  2458                           
  2459                           ;main.c: 273: CCPR1Lbits.CCPR1L = (unsigned char) ((kiwi_frequence[time%kiwi_length] + 1
      +                          )/2) ;
  2460  00129C  C070  F02B         	movff	_kiwi_length,___awmod@divisor
  2461  0012A0  6A2C               	clrf	___awmod@divisor+1,c
  2462  0012A2  C067  F029         	movff	searched@time,___awmod@dividend
  2463  0012A6  C068  F02A         	movff	searched@time+1,___awmod@dividend+1
  2464  0012AA  EC31  F00B         	call	___awmod	;wreg free
  2465  0012AE  0E71               	movlw	low _kiwi_frequence
  2466  0012B0  2429               	addwf	?___awmod,w,c
  2467  0012B2  6ED9               	movwf	fsr2l,c
  2468  0012B4  0E00               	movlw	high _kiwi_frequence
  2469  0012B6  202A               	addwfc	?___awmod+1,w,c
  2470  0012B8  6EDA               	movwf	fsr2h,c
  2471  0012BA  50DF               	movf	indf2,w,c
  2472  0012BC  0100               	movlb	0	; () banked
  2473  0012BE  6F60               	movwf	??_searched& (0+255),b
  2474  0012C0  0E01               	movlw	1
  2475  0012C2  0100               	movlb	0	; () banked
  2476  0012C4  2560               	addwf	??_searched& (0+255),w,b
  2477  0012C6  6E2F               	movwf	___awdiv@dividend,c
  2478  0012C8  6A30               	clrf	___awdiv@dividend+1,c
  2479  0012CA  0E00               	movlw	0
  2480  0012CC  2230               	addwfc	___awdiv@dividend+1,f,c
  2481  0012CE  0E00               	movlw	0
  2482  0012D0  6E32               	movwf	___awdiv@divisor+1,c
  2483  0012D2  0E02               	movlw	2
  2484  0012D4  6E31               	movwf	___awdiv@divisor,c
  2485  0012D6  ECF5  F009         	call	___awdiv	;wreg free
  2486  0012DA  502F               	movf	?___awdiv,w,c
  2487  0012DC  6EBE               	movwf	4030,c	;volatile
  2488                           
  2489                           ;main.c: 275: flashlight();
  2490  0012DE  ECE9  F00C         	call	_flashlight	;wreg free
  2491                           
  2492                           ;main.c: 276: _delay(15000);
  2493  0012E2  0E14               	movlw	20
  2494  0012E4  0100               	movlb	0	; () banked
  2495  0012E6  6F60               	movwf	??_searched& (0+255),b
  2496  0012E8  0E79               	movlw	121
  2497  0012EA                     u1187:
  2498  0012EA  2EE8               	decfsz	wreg,f,c
  2499  0012EC  D7FE               	bra	u1187
  2500  0012EE  2F60               	decfsz	??_searched& (0+255),f,b
  2501  0012F0  D7FC               	bra	u1187
  2502  0012F2  D000               	nop2	
  2503  0012F4                     l1834:
  2504  0012F4  0100               	movlb	0	; () banked
  2505  0012F6  5167               	movf	searched@time& (0+255),w,b
  2506  0012F8  0100               	movlb	0	; () banked
  2507  0012FA  6F60               	movwf	??_searched& (0+255),b
  2508  0012FC  0100               	movlb	0	; () banked
  2509  0012FE  5168               	movf	(searched@time+1)& (0+255),w,b
  2510  001300  0100               	movlb	0	; () banked
  2511  001302  6F61               	movwf	(??_searched+1)& (0+255),b
  2512  001304  0100               	movlb	0	; () banked
  2513  001306  4B67               	infsnz	searched@time& (0+255),f,b
  2514  001308  2B68               	incf	(searched@time+1)& (0+255),f,b
  2515  00130A  0100               	movlb	0	; () banked
  2516  00130C  5165               	movf	searched@max_time& (0+255),w,b
  2517  00130E  0100               	movlb	0	; () banked
  2518  001310  5D60               	subwf	??_searched& (0+255),w,b
  2519  001312  0100               	movlb	0	; () banked
  2520  001314  5161               	movf	(??_searched+1)& (0+255),w,b
  2521  001316  0A80               	xorlw	128
  2522  001318  0100               	movlb	0	; () banked
  2523  00131A  6F62               	movwf	(??_searched+2)& (0+255),b
  2524  00131C  0100               	movlb	0	; () banked
  2525  00131E  5166               	movf	(searched@max_time+1)& (0+255),w,b
  2526  001320  0A80               	xorlw	128
  2527  001322  0100               	movlb	0	; () banked
  2528  001324  5962               	subwfb	(??_searched+2)& (0+255),w,b
  2529  001326  A0D8               	btfss	status,0,c
  2530  001328  D7A8               	goto	l1828
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;main.c: 283: }
  2534                           ;main.c: 286: CCPR1Lbits.CCPR1L = 0 ;
  2535                           
  2536                           ; BSR set to: 0
  2537  00132A  0E00               	movlw	0
  2538  00132C  6EBE               	movwf	4030,c	;volatile
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;main.c: 287: LATCbits.LATC1 = 0;
  2542  00132E  928B               	bcf	3979,1,c	;volatile
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;main.c: 288: INTCON3bits.INT2IF = 0;
  2546  001330  92F0               	bcf	intcon3,1,c	;volatile
  2547                           
  2548                           ; BSR set to: 0
  2549  001332  0012               	return		;funcret
  2550  001334                     __end_of_searched:
  2551                           	opt stack 0
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           prodh	equ	0xFF4
  2557                           prodl	equ	0xFF3
  2558                           intcon	equ	0xFF2
  2559                           intcon2	equ	0xFF1
  2560                           intcon3	equ	0xFF0
  2561                           indf0	equ	0xFEF
  2562                           postinc0	equ	0xFEE
  2563                           fsr0h	equ	0xFEA
  2564                           fsr0l	equ	0xFE9
  2565                           wreg	equ	0xFE8
  2566                           postdec1	equ	0xFE5
  2567                           fsr1h	equ	0xFE2
  2568                           fsr1l	equ	0xFE1
  2569                           indf2	equ	0xFDF
  2570                           fsr2h	equ	0xFDA
  2571                           fsr2l	equ	0xFD9
  2572                           status	equ	0xFD8
  2573                           
  2574 ;; *************** function _flashlight *****************
  2575 ;; Defined at:
  2576 ;;		line 156 in file "main.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;Total ram usage:        1 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    8
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_searched
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text15
  2605  0019D2                     __ptext15:
  2606                           	opt stack 0
  2607  0019D2                     _flashlight:
  2608                           	opt stack 21
  2609                           
  2610                           ;main.c: 158: LATCbits.LATC1 = (unsigned char) !LATCbits.LATC1;
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;incstack = 0
  2614  0019D2  B28B               	btfsc	3979,1,c	;volatile
  2615  0019D4  D003               	goto	u990
  2616  0019D6  6A29               	clrf	??_flashlight& (0+255),c
  2617  0019D8  2A29               	incf	??_flashlight& (0+255),f,c
  2618  0019DA  D001               	goto	u1008
  2619  0019DC                     u990:
  2620  0019DC  6A29               	clrf	??_flashlight& (0+255),c
  2621  0019DE                     u1008:
  2622  0019DE  4629               	rlncf	??_flashlight,f,c
  2623  0019E0  508B               	movf	3979,w,c	;volatile
  2624  0019E2  1829               	xorwf	??_flashlight,w,c
  2625  0019E4  0BFD               	andlw	-3
  2626  0019E6  1829               	xorwf	??_flashlight,w,c
  2627  0019E8  6E8B               	movwf	3979,c	;volatile
  2628                           
  2629                           ;main.c: 160: INTCON3bits.INT1IF = 0;
  2630  0019EA  90F0               	bcf	intcon3,0,c	;volatile
  2631  0019EC  0012               	return		;funcret
  2632  0019EE                     __end_of_flashlight:
  2633                           	opt stack 0
  2634                           tblptru	equ	0xFF8
  2635                           tblptrh	equ	0xFF7
  2636                           tblptrl	equ	0xFF6
  2637                           tablat	equ	0xFF5
  2638                           prodh	equ	0xFF4
  2639                           prodl	equ	0xFF3
  2640                           intcon	equ	0xFF2
  2641                           intcon2	equ	0xFF1
  2642                           intcon3	equ	0xFF0
  2643                           indf0	equ	0xFEF
  2644                           postinc0	equ	0xFEE
  2645                           fsr0h	equ	0xFEA
  2646                           fsr0l	equ	0xFE9
  2647                           wreg	equ	0xFE8
  2648                           postdec1	equ	0xFE5
  2649                           fsr1h	equ	0xFE2
  2650                           fsr1l	equ	0xFE1
  2651                           indf2	equ	0xFDF
  2652                           fsr2h	equ	0xFDA
  2653                           fsr2l	equ	0xFD9
  2654                           status	equ	0xFD8
  2655                           
  2656 ;; *************** function ___awmod *****************
  2657 ;; Defined at:
  2658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  dividend        2   40[COMRAM] int 
  2661 ;;  divisor         2   42[COMRAM] int 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  sign            1   45[COMRAM] unsigned char 
  2664 ;;  counter         1   44[COMRAM] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2   40[COMRAM] int 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;Total ram usage:        6 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    8
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_searched
  2685 ;;		_LCDWriteInt
  2686 ;;		_LCDPutByte
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text16
  2691  001662                     __ptext16:
  2692                           	opt stack 0
  2693  001662                     ___awmod:
  2694                           	opt stack 18
  2695                           
  2696                           ;incstack = 0
  2697  001662  0E00               	movlw	0
  2698  001664  6E2E               	movwf	___awmod@sign,c
  2699  001666  AE2A               	btfss	___awmod@dividend+1,7,c
  2700  001668  D006               	goto	l1532
  2701  00166A  6C29               	negf	___awmod@dividend,c
  2702  00166C  1E2A               	comf	___awmod@dividend+1,f,c
  2703  00166E  B0D8               	btfsc	status,0,c
  2704  001670  2A2A               	incf	___awmod@dividend+1,f,c
  2705  001672  0E01               	movlw	1
  2706  001674  6E2E               	movwf	___awmod@sign,c
  2707  001676                     l1532:
  2708  001676  AE2C               	btfss	___awmod@divisor+1,7,c
  2709  001678  D004               	goto	l1536
  2710  00167A  6C2B               	negf	___awmod@divisor,c
  2711  00167C  1E2C               	comf	___awmod@divisor+1,f,c
  2712  00167E  B0D8               	btfsc	status,0,c
  2713  001680  2A2C               	incf	___awmod@divisor+1,f,c
  2714  001682                     l1536:
  2715  001682  502B               	movf	___awmod@divisor,w,c
  2716  001684  102C               	iorwf	___awmod@divisor+1,w,c
  2717  001686  B4D8               	btfsc	status,2,c
  2718  001688  D018               	goto	l1552
  2719  00168A  0E01               	movlw	1
  2720  00168C  6E2D               	movwf	___awmod@counter,c
  2721  00168E  D004               	goto	l1542
  2722  001690                     l1540:
  2723  001690  90D8               	bcf	status,0,c
  2724  001692  362B               	rlcf	___awmod@divisor,f,c
  2725  001694  362C               	rlcf	___awmod@divisor+1,f,c
  2726  001696  2A2D               	incf	___awmod@counter,f,c
  2727  001698                     l1542:
  2728  001698  AE2C               	btfss	___awmod@divisor+1,7,c
  2729  00169A  D7FA               	goto	l1540
  2730  00169C                     l1544:
  2731  00169C  502B               	movf	___awmod@divisor,w,c
  2732  00169E  5C29               	subwf	___awmod@dividend,w,c
  2733  0016A0  502C               	movf	___awmod@divisor+1,w,c
  2734  0016A2  582A               	subwfb	___awmod@dividend+1,w,c
  2735  0016A4  A0D8               	btfss	status,0,c
  2736  0016A6  D004               	goto	l1548
  2737  0016A8  502B               	movf	___awmod@divisor,w,c
  2738  0016AA  5E29               	subwf	___awmod@dividend,f,c
  2739  0016AC  502C               	movf	___awmod@divisor+1,w,c
  2740  0016AE  5A2A               	subwfb	___awmod@dividend+1,f,c
  2741  0016B0                     l1548:
  2742  0016B0  90D8               	bcf	status,0,c
  2743  0016B2  322C               	rrcf	___awmod@divisor+1,f,c
  2744  0016B4  322B               	rrcf	___awmod@divisor,f,c
  2745  0016B6  2E2D               	decfsz	___awmod@counter,f,c
  2746  0016B8  D7F1               	goto	l1544
  2747  0016BA                     l1552:
  2748  0016BA  502E               	movf	___awmod@sign,w,c
  2749  0016BC  B4D8               	btfsc	status,2,c
  2750  0016BE  D004               	goto	l1556
  2751  0016C0  6C29               	negf	___awmod@dividend,c
  2752  0016C2  1E2A               	comf	___awmod@dividend+1,f,c
  2753  0016C4  B0D8               	btfsc	status,0,c
  2754  0016C6  2A2A               	incf	___awmod@dividend+1,f,c
  2755  0016C8                     l1556:
  2756  0016C8  C029  F029         	movff	___awmod@dividend,?___awmod
  2757  0016CC  C02A  F02A         	movff	___awmod@dividend+1,?___awmod+1
  2758  0016D0  0012               	return	
  2759  0016D2                     __end_of___awmod:
  2760                           	opt stack 0
  2761                           tblptru	equ	0xFF8
  2762                           tblptrh	equ	0xFF7
  2763                           tblptrl	equ	0xFF6
  2764                           tablat	equ	0xFF5
  2765                           prodh	equ	0xFF4
  2766                           prodl	equ	0xFF3
  2767                           intcon	equ	0xFF2
  2768                           intcon2	equ	0xFF1
  2769                           intcon3	equ	0xFF0
  2770                           indf0	equ	0xFEF
  2771                           postinc0	equ	0xFEE
  2772                           fsr0h	equ	0xFEA
  2773                           fsr0l	equ	0xFE9
  2774                           wreg	equ	0xFE8
  2775                           postdec1	equ	0xFE5
  2776                           fsr1h	equ	0xFE2
  2777                           fsr1l	equ	0xFE1
  2778                           indf2	equ	0xFDF
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function ___awdiv *****************
  2784 ;; Defined at:
  2785 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  dividend        2   46[COMRAM] int 
  2788 ;;  divisor         2   48[COMRAM] int 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  quotient        2   52[COMRAM] int 
  2791 ;;  sign            1   51[COMRAM] unsigned char 
  2792 ;;  counter         1   50[COMRAM] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  2   46[COMRAM] int 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;Total ram usage:        8 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    8
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_searched
  2813 ;;		_LCDWriteInt
  2814 ;;		_LCDPutByte
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text17
  2819  0013EA                     __ptext17:
  2820                           	opt stack 0
  2821  0013EA                     ___awdiv:
  2822                           	opt stack 18
  2823                           
  2824                           ;incstack = 0
  2825  0013EA  0E00               	movlw	0
  2826  0013EC  6E34               	movwf	___awdiv@sign,c
  2827  0013EE  AE32               	btfss	___awdiv@divisor+1,7,c
  2828  0013F0  D006               	goto	l1488
  2829  0013F2  6C31               	negf	___awdiv@divisor,c
  2830  0013F4  1E32               	comf	___awdiv@divisor+1,f,c
  2831  0013F6  B0D8               	btfsc	status,0,c
  2832  0013F8  2A32               	incf	___awdiv@divisor+1,f,c
  2833  0013FA  0E01               	movlw	1
  2834  0013FC  6E34               	movwf	___awdiv@sign,c
  2835  0013FE                     l1488:
  2836  0013FE  AE30               	btfss	___awdiv@dividend+1,7,c
  2837  001400  D006               	goto	l1494
  2838  001402  6C2F               	negf	___awdiv@dividend,c
  2839  001404  1E30               	comf	___awdiv@dividend+1,f,c
  2840  001406  B0D8               	btfsc	status,0,c
  2841  001408  2A30               	incf	___awdiv@dividend+1,f,c
  2842  00140A  0E01               	movlw	1
  2843  00140C  1A34               	xorwf	___awdiv@sign,f,c
  2844  00140E                     l1494:
  2845  00140E  0E00               	movlw	0
  2846  001410  6E36               	movwf	___awdiv@quotient+1,c
  2847  001412  0E00               	movlw	0
  2848  001414  6E35               	movwf	___awdiv@quotient,c
  2849  001416  5031               	movf	___awdiv@divisor,w,c
  2850  001418  1032               	iorwf	___awdiv@divisor+1,w,c
  2851  00141A  B4D8               	btfsc	status,2,c
  2852  00141C  D01C               	goto	l1516
  2853  00141E  0E01               	movlw	1
  2854  001420  6E33               	movwf	___awdiv@counter,c
  2855  001422  D004               	goto	l1502
  2856  001424                     l1500:
  2857  001424  90D8               	bcf	status,0,c
  2858  001426  3631               	rlcf	___awdiv@divisor,f,c
  2859  001428  3632               	rlcf	___awdiv@divisor+1,f,c
  2860  00142A  2A33               	incf	___awdiv@counter,f,c
  2861  00142C                     l1502:
  2862  00142C  AE32               	btfss	___awdiv@divisor+1,7,c
  2863  00142E  D7FA               	goto	l1500
  2864  001430                     l1504:
  2865  001430  90D8               	bcf	status,0,c
  2866  001432  3635               	rlcf	___awdiv@quotient,f,c
  2867  001434  3636               	rlcf	___awdiv@quotient+1,f,c
  2868  001436  5031               	movf	___awdiv@divisor,w,c
  2869  001438  5C2F               	subwf	___awdiv@dividend,w,c
  2870  00143A  5032               	movf	___awdiv@divisor+1,w,c
  2871  00143C  5830               	subwfb	___awdiv@dividend+1,w,c
  2872  00143E  A0D8               	btfss	status,0,c
  2873  001440  D005               	goto	l1512
  2874  001442  5031               	movf	___awdiv@divisor,w,c
  2875  001444  5E2F               	subwf	___awdiv@dividend,f,c
  2876  001446  5032               	movf	___awdiv@divisor+1,w,c
  2877  001448  5A30               	subwfb	___awdiv@dividend+1,f,c
  2878  00144A  8035               	bsf	___awdiv@quotient,0,c
  2879  00144C                     l1512:
  2880  00144C  90D8               	bcf	status,0,c
  2881  00144E  3232               	rrcf	___awdiv@divisor+1,f,c
  2882  001450  3231               	rrcf	___awdiv@divisor,f,c
  2883  001452  2E33               	decfsz	___awdiv@counter,f,c
  2884  001454  D7ED               	goto	l1504
  2885  001456                     l1516:
  2886  001456  5034               	movf	___awdiv@sign,w,c
  2887  001458  B4D8               	btfsc	status,2,c
  2888  00145A  D004               	goto	l1520
  2889  00145C  6C35               	negf	___awdiv@quotient,c
  2890  00145E  1E36               	comf	___awdiv@quotient+1,f,c
  2891  001460  B0D8               	btfsc	status,0,c
  2892  001462  2A36               	incf	___awdiv@quotient+1,f,c
  2893  001464                     l1520:
  2894  001464  C035  F02F         	movff	___awdiv@quotient,?___awdiv
  2895  001468  C036  F030         	movff	___awdiv@quotient+1,?___awdiv+1
  2896  00146C  0012               	return	
  2897  00146E                     __end_of___awdiv:
  2898                           	opt stack 0
  2899                           tblptru	equ	0xFF8
  2900                           tblptrh	equ	0xFF7
  2901                           tblptrl	equ	0xFF6
  2902                           tablat	equ	0xFF5
  2903                           prodh	equ	0xFF4
  2904                           prodl	equ	0xFF3
  2905                           intcon	equ	0xFF2
  2906                           intcon2	equ	0xFF1
  2907                           intcon3	equ	0xFF0
  2908                           indf0	equ	0xFEF
  2909                           postinc0	equ	0xFEE
  2910                           fsr0h	equ	0xFEA
  2911                           fsr0l	equ	0xFE9
  2912                           wreg	equ	0xFE8
  2913                           postdec1	equ	0xFE5
  2914                           fsr1h	equ	0xFE2
  2915                           fsr1l	equ	0xFE1
  2916                           indf2	equ	0xFDF
  2917                           fsr2h	equ	0xFDA
  2918                           fsr2l	equ	0xFD9
  2919                           status	equ	0xFD8
  2920                           
  2921 ;; *************** function _ISR *****************
  2922 ;; Defined at:
  2923 ;;		line 300 in file "main.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  i               2   38[COMRAM] int 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;Total ram usage:       17 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    7
  2944 ;; This function calls:
  2945 ;;		_pedometer
  2946 ;;		_synchronize
  2947 ;;		i2_flashlight
  2948 ;;		i2_searched
  2949 ;; This function is called by:
  2950 ;;		Interrupt level 2
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	intcode
  2955  000008                     __pintcode:
  2956                           	opt stack 0
  2957  000008                     _ISR:
  2958                           	opt stack 15
  2959                           
  2960                           ;incstack = 0
  2961  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2962  00000A  CFFA F019          	movff	pclath,??_ISR+1
  2963  00000E  CFFB F01A          	movff	pclatu,??_ISR+2
  2964  000012  CFE9 F01B          	movff	fsr0l,??_ISR+3
  2965  000016  CFEA F01C          	movff	fsr0h,??_ISR+4
  2966  00001A  CFE1 F01D          	movff	fsr1l,??_ISR+5
  2967  00001E  CFE2 F01E          	movff	fsr1h,??_ISR+6
  2968  000022  CFD9 F01F          	movff	fsr2l,??_ISR+7
  2969  000026  CFDA F020          	movff	fsr2h,??_ISR+8
  2970  00002A  CFF3 F021          	movff	prodl,??_ISR+9
  2971  00002E  CFF4 F022          	movff	prodh,??_ISR+10
  2972  000032  CFF6 F023          	movff	tblptrl,??_ISR+11
  2973  000036  CFF7 F024          	movff	tblptrh,??_ISR+12
  2974  00003A  CFF8 F025          	movff	tblptru,??_ISR+13
  2975  00003E  CFF5 F026          	movff	tablat,??_ISR+14
  2976                           
  2977                           ;main.c: 302: if (INTCONbits.INT0IF) { pedometer(); }
  2978  000042  B2F2               	btfsc	intcon,1,c	;volatile
  2979  000044  EC54  F00D         	call	_pedometer	;wreg free
  2980                           
  2981                           ;main.c: 303: if (INTCON3bits.INT1IF) { searched(); }
  2982  000048  B0F0               	btfsc	intcon3,0,c	;volatile
  2983  00004A  EC9A  F009         	call	i2_searched	;wreg free
  2984                           
  2985                           ;main.c: 305: if (INTCON3bits.INT2IF) {
  2986  00004E  A2F0               	btfss	intcon3,1,c	;volatile
  2987  000050  D027               	goto	i2l79
  2988                           
  2989                           ;main.c: 307: int i = 0;
  2990  000052  0E00               	movlw	0
  2991  000054  6E28               	movwf	ISR@i+1,c
  2992  000056  0E00               	movlw	0
  2993  000058  6E27               	movwf	ISR@i,c
  2994                           
  2995                           ;main.c: 308: for (i = 0; i < 30; i++) {
  2996  00005A  0E00               	movlw	0
  2997  00005C  6E28               	movwf	ISR@i+1,c
  2998  00005E  0E00               	movlw	0
  2999  000060  6E27               	movwf	ISR@i,c
  3000  000062                     i2l1872:
  3001  000062  BE28               	btfsc	ISR@i+1,7,c
  3002  000064  D006               	goto	i2l74
  3003  000066  5028               	movf	ISR@i+1,w,c
  3004  000068  E111               	bnz	i2l1882
  3005  00006A  0E1E               	movlw	30
  3006  00006C  5C27               	subwf	ISR@i,w,c
  3007  00006E  B0D8               	btfsc	status,0,c
  3008  000070  D00D               	goto	i2l1882
  3009  000072                     i2l74:
  3010                           
  3011                           ;main.c: 309: if (!LATBbits.LATB2) { break ; }
  3012  000072  A48A               	btfss	3978,2,c	;volatile
  3013  000074  D00B               	goto	i2l1882
  3014                           
  3015                           ;main.c: 310: _delay(25000);
  3016  000076  0E21               	movlw	33
  3017  000078  6E18               	movwf	??_ISR& (0+255),c
  3018  00007A  0E76               	movlw	118
  3019  00007C                     i2u119_47:
  3020  00007C  2EE8               	decfsz	wreg,f,c
  3021  00007E  D7FE               	bra	i2u119_47
  3022  000080  2E18               	decfsz	??_ISR& (0+255),f,c
  3023  000082  D7FC               	bra	i2u119_47
  3024  000084  D000               	nop2	
  3025  000086  4A27               	infsnz	ISR@i,f,c
  3026  000088  2A28               	incf	ISR@i+1,f,c
  3027  00008A  D7EB               	goto	i2l1872
  3028  00008C                     i2l1882:
  3029                           
  3030                           ;main.c: 311: }
  3031                           ;main.c: 313: if (i == 30) { synchronize(); }
  3032  00008C  0E1E               	movlw	30
  3033  00008E  1827               	xorwf	ISR@i,w,c
  3034  000090  1028               	iorwf	ISR@i+1,w,c
  3035  000092  A4D8               	btfss	status,2,c
  3036  000094  D003               	goto	i2l1886
  3037  000096  EC5B  F00D         	call	_synchronize	;wreg free
  3038  00009A  D002               	goto	i2l79
  3039  00009C                     i2l1886:
  3040                           
  3041                           ;main.c: 315: else { flashlight(); }
  3042  00009C  ECF7  F00C         	call	i2_flashlight	;wreg free
  3043  0000A0                     i2l79:
  3044  0000A0  C026  FFF5         	movff	??_ISR+14,tablat
  3045  0000A4  C025  FFF8         	movff	??_ISR+13,tblptru
  3046  0000A8  C024  FFF7         	movff	??_ISR+12,tblptrh
  3047  0000AC  C023  FFF6         	movff	??_ISR+11,tblptrl
  3048  0000B0  C022  FFF4         	movff	??_ISR+10,prodh
  3049  0000B4  C021  FFF3         	movff	??_ISR+9,prodl
  3050  0000B8  C020  FFDA         	movff	??_ISR+8,fsr2h
  3051  0000BC  C01F  FFD9         	movff	??_ISR+7,fsr2l
  3052  0000C0  C01E  FFE2         	movff	??_ISR+6,fsr1h
  3053  0000C4  C01D  FFE1         	movff	??_ISR+5,fsr1l
  3054  0000C8  C01C  FFEA         	movff	??_ISR+4,fsr0h
  3055  0000CC  C01B  FFE9         	movff	??_ISR+3,fsr0l
  3056  0000D0  C01A  FFFB         	movff	??_ISR+2,pclatu
  3057  0000D4  C019  FFFA         	movff	??_ISR+1,pclath
  3058  0000D8  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3059  0000DA  0011               	retfie		f
  3060  0000DC                     __end_of_ISR:
  3061                           	opt stack 0
  3062                           pclatu	equ	0xFFB
  3063                           pclath	equ	0xFFA
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           intcon	equ	0xFF2
  3071                           intcon2	equ	0xFF1
  3072                           intcon3	equ	0xFF0
  3073                           indf0	equ	0xFEF
  3074                           postinc0	equ	0xFEE
  3075                           fsr0h	equ	0xFEA
  3076                           fsr0l	equ	0xFE9
  3077                           wreg	equ	0xFE8
  3078                           postdec1	equ	0xFE5
  3079                           fsr1h	equ	0xFE2
  3080                           fsr1l	equ	0xFE1
  3081                           indf2	equ	0xFDF
  3082                           fsr2h	equ	0xFDA
  3083                           fsr2l	equ	0xFD9
  3084                           status	equ	0xFD8
  3085                           
  3086 ;; *************** function i2_searched *****************
  3087 ;; Defined at:
  3088 ;;		line 265 in file "main.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  searched        2   21[COMRAM] int 
  3093 ;;  searched        2   19[COMRAM] int 
  3094 ;;  searched        2   17[COMRAM] int 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        9 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    1
  3111 ;; This function calls:
  3112 ;;		i2___awdiv
  3113 ;;		i2___awmod
  3114 ;;		i2_flashlight
  3115 ;; This function is called by:
  3116 ;;		_ISR
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text19
  3121  001334                     __ptext19:
  3122                           	opt stack 0
  3123  001334                     i2_searched:
  3124                           	opt stack 20
  3125                           
  3126                           ;main.c: 267: int time = 0, max_time = 500, i = 0;
  3127                           
  3128                           ;incstack = 0
  3129  001334  0E00               	movlw	0
  3130  001336  6E17               	movwf	i2searched@time+1,c
  3131  001338  0E00               	movlw	0
  3132  00133A  6E16               	movwf	i2searched@time,c
  3133  00133C  0E01               	movlw	1
  3134  00133E  6E15               	movwf	i2searched@max_time+1,c
  3135  001340  0EF4               	movlw	244
  3136  001342  6E14               	movwf	i2searched@max_time,c
  3137  001344  0E00               	movlw	0
  3138  001346  6E13               	movwf	i2searched@i+1,c
  3139  001348  0E00               	movlw	0
  3140  00134A  6E12               	movwf	i2searched@i,c
  3141                           
  3142                           ;main.c: 270: while (time++ < max_time) {
  3143  00134C  D039               	goto	i2l1852
  3144  00134E                     i2l1846:
  3145                           
  3146                           ;main.c: 272: PR2bits.PR2 = kiwi_frequence[time%kiwi_length];
  3147  00134E  C016  F001         	movff	i2searched@time,i2___awmod@dividend
  3148  001352  C017  F002         	movff	i2searched@time+1,i2___awmod@dividend+1
  3149  001356  C070  F003         	movff	_kiwi_length,i2___awmod@divisor
  3150  00135A  6A04               	clrf	i2___awmod@divisor+1,c
  3151  00135C  EC69  F00B         	call	i2___awmod	;wreg free
  3152  001360  0E71               	movlw	low _kiwi_frequence
  3153  001362  2401               	addwf	?i2___awmod,w,c
  3154  001364  6ED9               	movwf	fsr2l,c
  3155  001366  0E00               	movlw	high _kiwi_frequence
  3156  001368  2002               	addwfc	?i2___awmod+1,w,c
  3157  00136A  6EDA               	movwf	fsr2h,c
  3158  00136C  50DF               	movf	indf2,w,c
  3159  00136E  6EBB               	movwf	4027,c	;volatile
  3160                           
  3161                           ;main.c: 273: CCPR1Lbits.CCPR1L = (unsigned char) ((kiwi_frequence[time%kiwi_length] + 1
      +                          )/2) ;
  3162  001370  C070  F003         	movff	_kiwi_length,i2___awmod@divisor
  3163  001374  6A04               	clrf	i2___awmod@divisor+1,c
  3164  001376  C016  F001         	movff	i2searched@time,i2___awmod@dividend
  3165  00137A  C017  F002         	movff	i2searched@time+1,i2___awmod@dividend+1
  3166  00137E  EC69  F00B         	call	i2___awmod	;wreg free
  3167  001382  0E71               	movlw	low _kiwi_frequence
  3168  001384  2401               	addwf	?i2___awmod,w,c
  3169  001386  6ED9               	movwf	fsr2l,c
  3170  001388  0E00               	movlw	high _kiwi_frequence
  3171  00138A  2002               	addwfc	?i2___awmod+1,w,c
  3172  00138C  6EDA               	movwf	fsr2h,c
  3173  00138E  50DF               	movf	indf2,w,c
  3174  001390  6E0F               	movwf	??i2_searched& (0+255),c
  3175  001392  0E01               	movlw	1
  3176  001394  240F               	addwf	??i2_searched,w,c
  3177  001396  6E07               	movwf	i2___awdiv@dividend,c
  3178  001398  6A08               	clrf	i2___awdiv@dividend+1,c
  3179  00139A  0E00               	movlw	0
  3180  00139C  2208               	addwfc	i2___awdiv@dividend+1,f,c
  3181  00139E  0E00               	movlw	0
  3182  0013A0  6E0A               	movwf	i2___awdiv@divisor+1,c
  3183  0013A2  0E02               	movlw	2
  3184  0013A4  6E09               	movwf	i2___awdiv@divisor,c
  3185  0013A6  EC37  F00A         	call	i2___awdiv	;wreg free
  3186  0013AA  5007               	movf	?i2___awdiv,w,c
  3187  0013AC  6EBE               	movwf	4030,c	;volatile
  3188                           
  3189                           ;main.c: 275: flashlight();
  3190  0013AE  ECF7  F00C         	call	i2_flashlight	;wreg free
  3191                           
  3192                           ;main.c: 276: _delay(15000);
  3193  0013B2  0E14               	movlw	20
  3194  0013B4  6E0F               	movwf	??i2_searched& (0+255),c
  3195  0013B6  0E7A               	movlw	122
  3196  0013B8                     i2u120_47:
  3197  0013B8  2EE8               	decfsz	wreg,f,c
  3198  0013BA  D7FE               	bra	i2u120_47
  3199  0013BC  2E0F               	decfsz	??i2_searched& (0+255),f,c
  3200  0013BE  D7FC               	bra	i2u120_47
  3201  0013C0                     i2l1852:
  3202  0013C0  5016               	movf	i2searched@time,w,c
  3203  0013C2  6E0F               	movwf	??i2_searched& (0+255),c
  3204  0013C4  5017               	movf	i2searched@time+1,w,c
  3205  0013C6  6E10               	movwf	(??i2_searched+1)& (0+255),c
  3206  0013C8  4A16               	infsnz	i2searched@time,f,c
  3207  0013CA  2A17               	incf	i2searched@time+1,f,c
  3208  0013CC  5014               	movf	i2searched@max_time,w,c
  3209  0013CE  5C0F               	subwf	??i2_searched,w,c
  3210  0013D0  5010               	movf	??i2_searched+1,w,c
  3211  0013D2  0A80               	xorlw	128
  3212  0013D4  6E11               	movwf	(??i2_searched+2)& (0+255),c
  3213  0013D6  5015               	movf	i2searched@max_time+1,w,c
  3214  0013D8  0A80               	xorlw	128
  3215  0013DA  5811               	subwfb	(??i2_searched+2)& (0+255),w,c
  3216  0013DC  A0D8               	btfss	status,0,c
  3217  0013DE  D7B7               	goto	i2l1846
  3218                           
  3219                           ;main.c: 283: }
  3220                           ;main.c: 286: CCPR1Lbits.CCPR1L = 0 ;
  3221  0013E0  0E00               	movlw	0
  3222  0013E2  6EBE               	movwf	4030,c	;volatile
  3223                           
  3224                           ;main.c: 287: LATCbits.LATC1 = 0;
  3225  0013E4  928B               	bcf	3979,1,c	;volatile
  3226                           
  3227                           ;main.c: 288: INTCON3bits.INT2IF = 0;
  3228  0013E6  92F0               	bcf	intcon3,1,c	;volatile
  3229  0013E8  0012               	return		;funcret
  3230  0013EA                     __end_ofi2_searched:
  3231                           	opt stack 0
  3232                           pclatu	equ	0xFFB
  3233                           pclath	equ	0xFFA
  3234                           tblptru	equ	0xFF8
  3235                           tblptrh	equ	0xFF7
  3236                           tblptrl	equ	0xFF6
  3237                           tablat	equ	0xFF5
  3238                           prodh	equ	0xFF4
  3239                           prodl	equ	0xFF3
  3240                           intcon	equ	0xFF2
  3241                           intcon2	equ	0xFF1
  3242                           intcon3	equ	0xFF0
  3243                           indf0	equ	0xFEF
  3244                           postinc0	equ	0xFEE
  3245                           fsr0h	equ	0xFEA
  3246                           fsr0l	equ	0xFE9
  3247                           wreg	equ	0xFE8
  3248                           postdec1	equ	0xFE5
  3249                           fsr1h	equ	0xFE2
  3250                           fsr1l	equ	0xFE1
  3251                           indf2	equ	0xFDF
  3252                           fsr2h	equ	0xFDA
  3253                           fsr2l	equ	0xFD9
  3254                           status	equ	0xFD8
  3255                           
  3256 ;; *************** function i2_flashlight *****************
  3257 ;; Defined at:
  3258 ;;		line 156 in file "main.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;		None
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;		None
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;Total ram usage:        1 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_ISR
  3282 ;;		i2_searched
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text20
  3287  0019EE                     __ptext20:
  3288                           	opt stack 0
  3289  0019EE                     i2_flashlight:
  3290                           	opt stack 20
  3291                           
  3292                           ;main.c: 158: LATCbits.LATC1 = (unsigned char) !LATCbits.LATC1;
  3293                           
  3294                           ;incstack = 0
  3295  0019EE  B28B               	btfsc	3979,1,c	;volatile
  3296  0019F0  D003               	goto	i2u101_40
  3297  0019F2  6A01               	clrf	??i2_flashlight& (0+255),c
  3298  0019F4  2A01               	incf	??i2_flashlight& (0+255),f,c
  3299  0019F6  D001               	goto	i2u102_48
  3300  0019F8                     i2u101_40:
  3301  0019F8  6A01               	clrf	??i2_flashlight& (0+255),c
  3302  0019FA                     i2u102_48:
  3303  0019FA  4601               	rlncf	??i2_flashlight,f,c
  3304  0019FC  508B               	movf	3979,w,c	;volatile
  3305  0019FE  1801               	xorwf	??i2_flashlight,w,c
  3306  001A00  0BFD               	andlw	-3
  3307  001A02  1801               	xorwf	??i2_flashlight,w,c
  3308  001A04  6E8B               	movwf	3979,c	;volatile
  3309                           
  3310                           ;main.c: 160: INTCON3bits.INT1IF = 0;
  3311  001A06  90F0               	bcf	intcon3,0,c	;volatile
  3312  001A08  0012               	return		;funcret
  3313  001A0A                     __end_ofi2_flashlight:
  3314                           	opt stack 0
  3315                           pclatu	equ	0xFFB
  3316                           pclath	equ	0xFFA
  3317                           tblptru	equ	0xFF8
  3318                           tblptrh	equ	0xFF7
  3319                           tblptrl	equ	0xFF6
  3320                           tablat	equ	0xFF5
  3321                           prodh	equ	0xFF4
  3322                           prodl	equ	0xFF3
  3323                           intcon	equ	0xFF2
  3324                           intcon2	equ	0xFF1
  3325                           intcon3	equ	0xFF0
  3326                           indf0	equ	0xFEF
  3327                           postinc0	equ	0xFEE
  3328                           fsr0h	equ	0xFEA
  3329                           fsr0l	equ	0xFE9
  3330                           wreg	equ	0xFE8
  3331                           postdec1	equ	0xFE5
  3332                           fsr1h	equ	0xFE2
  3333                           fsr1l	equ	0xFE1
  3334                           indf2	equ	0xFDF
  3335                           fsr2h	equ	0xFDA
  3336                           fsr2l	equ	0xFD9
  3337                           status	equ	0xFD8
  3338                           
  3339 ;; *************** function _synchronize *****************
  3340 ;; Defined at:
  3341 ;;		line 293 in file "main.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_ISR
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text21
  3369  001AB6                     __ptext21:
  3370                           	opt stack 0
  3371  001AB6                     _synchronize:
  3372                           	opt stack 21
  3373                           
  3374                           ;main.c: 296: steps = 0;
  3375                           
  3376                           ;incstack = 0
  3377  001AB6  0E00               	movlw	0
  3378  001AB8  0100               	movlb	0	; () banked
  3379  001ABA  6F6F               	movwf	(_steps+1)& (0+255),b
  3380  001ABC  0E00               	movlw	0
  3381  001ABE  6F6E               	movwf	_steps& (0+255),b
  3382                           
  3383                           ; BSR set to: 0
  3384  001AC0  0012               	return		;funcret
  3385  001AC2                     __end_of_synchronize:
  3386                           	opt stack 0
  3387                           pclatu	equ	0xFFB
  3388                           pclath	equ	0xFFA
  3389                           tblptru	equ	0xFF8
  3390                           tblptrh	equ	0xFF7
  3391                           tblptrl	equ	0xFF6
  3392                           tablat	equ	0xFF5
  3393                           prodh	equ	0xFF4
  3394                           prodl	equ	0xFF3
  3395                           intcon	equ	0xFF2
  3396                           intcon2	equ	0xFF1
  3397                           intcon3	equ	0xFF0
  3398                           indf0	equ	0xFEF
  3399                           postinc0	equ	0xFEE
  3400                           fsr0h	equ	0xFEA
  3401                           fsr0l	equ	0xFE9
  3402                           wreg	equ	0xFE8
  3403                           postdec1	equ	0xFE5
  3404                           fsr1h	equ	0xFE2
  3405                           fsr1l	equ	0xFE1
  3406                           indf2	equ	0xFDF
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function _pedometer *****************
  3412 ;; Defined at:
  3413 ;;		line 145 in file "main.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    6
  3434 ;; This function calls:
  3435 ;;		i2_show_debug
  3436 ;; This function is called by:
  3437 ;;		_ISR
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text22
  3442  001AA8                     __ptext22:
  3443                           	opt stack 0
  3444  001AA8                     _pedometer:
  3445                           	opt stack 15
  3446                           
  3447                           ;main.c: 147: steps++;
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;incstack = 0
  3451  001AA8  0100               	movlb	0	; () banked
  3452  001AAA  4B6E               	infsnz	_steps& (0+255),f,b
  3453  001AAC  2B6F               	incf	(_steps+1)& (0+255),f,b
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;main.c: 149: INTCONbits.INT0IF = 0 ;
  3457  001AAE  92F2               	bcf	intcon,1,c	;volatile
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;main.c: 152: show_debug();
  3461  001AB0  EC4C  F00D         	call	i2_show_debug	;wreg free
  3462  001AB4  0012               	return		;funcret
  3463  001AB6                     __end_of_pedometer:
  3464                           	opt stack 0
  3465                           pclatu	equ	0xFFB
  3466                           pclath	equ	0xFFA
  3467                           tblptru	equ	0xFF8
  3468                           tblptrh	equ	0xFF7
  3469                           tblptrl	equ	0xFF6
  3470                           tablat	equ	0xFF5
  3471                           prodh	equ	0xFF4
  3472                           prodl	equ	0xFF3
  3473                           intcon	equ	0xFF2
  3474                           intcon2	equ	0xFF1
  3475                           intcon3	equ	0xFF0
  3476                           indf0	equ	0xFEF
  3477                           postinc0	equ	0xFEE
  3478                           fsr0h	equ	0xFEA
  3479                           fsr0l	equ	0xFE9
  3480                           wreg	equ	0xFE8
  3481                           postdec1	equ	0xFE5
  3482                           fsr1h	equ	0xFE2
  3483                           fsr1l	equ	0xFE1
  3484                           indf2	equ	0xFDF
  3485                           fsr2h	equ	0xFDA
  3486                           fsr2l	equ	0xFD9
  3487                           status	equ	0xFD8
  3488                           
  3489 ;; *************** function i2_show_debug *****************
  3490 ;; Defined at:
  3491 ;;		line 75 in file "main.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;Total ram usage:        0 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; Hardware stack levels required when called:    5
  3512 ;; This function calls:
  3513 ;;		i2_LCDWriteInt
  3514 ;; This function is called by:
  3515 ;;		_pedometer
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text23
  3520  001A98                     __ptext23:
  3521                           	opt stack 0
  3522  001A98                     i2_show_debug:
  3523                           	opt stack 15
  3524                           
  3525                           ;main.c: 76: LCDWriteInt(0, 1, steps);
  3526                           
  3527                           ;incstack = 0
  3528  001A98  0E01               	movlw	1
  3529  001A9A  6E0F               	movwf	i2LCDWriteInt@row,c
  3530  001A9C  C06E  F010         	movff	_steps,i2LCDWriteInt@value
  3531  001AA0  0E00               	movlw	0
  3532  001AA2  ECCD  F00B         	call	i2_LCDWriteInt
  3533  001AA6  0012               	return		;funcret
  3534  001AA8                     __end_ofi2_show_debug:
  3535                           	opt stack 0
  3536                           pclatu	equ	0xFFB
  3537                           pclath	equ	0xFFA
  3538                           tblptru	equ	0xFF8
  3539                           tblptrh	equ	0xFF7
  3540                           tblptrl	equ	0xFF6
  3541                           tablat	equ	0xFF5
  3542                           prodh	equ	0xFF4
  3543                           prodl	equ	0xFF3
  3544                           intcon	equ	0xFF2
  3545                           intcon2	equ	0xFF1
  3546                           intcon3	equ	0xFF0
  3547                           indf0	equ	0xFEF
  3548                           postinc0	equ	0xFEE
  3549                           fsr0h	equ	0xFEA
  3550                           fsr0l	equ	0xFE9
  3551                           wreg	equ	0xFE8
  3552                           postdec1	equ	0xFE5
  3553                           fsr1h	equ	0xFE2
  3554                           fsr1l	equ	0xFE1
  3555                           indf2	equ	0xFDF
  3556                           fsr2h	equ	0xFDA
  3557                           fsr2l	equ	0xFD9
  3558                           status	equ	0xFD8
  3559                           
  3560 ;; *************** function i2_LCDWriteInt *****************
  3561 ;; Defined at:
  3562 ;;		line 229 in file "lcd.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  column          1    wreg     unsigned char 
  3565 ;;  row             1   14[COMRAM] unsigned char 
  3566 ;;  value           1   15[COMRAM] unsigned char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  column          1   19[COMRAM] unsigned char 
  3569 ;;  LCDWriteInt     3   16[COMRAM] unsigned char [3]
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;Total ram usage:        6 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    4
  3586 ;; This function calls:
  3587 ;;		i2_LCDGoto
  3588 ;;		i2_LCDWriteStr
  3589 ;;		i2___awdiv
  3590 ;;		i2___awmod
  3591 ;; This function is called by:
  3592 ;;		i2_show_debug
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text24
  3597  00179A                     __ptext24:
  3598                           	opt stack 0
  3599  00179A                     i2_LCDWriteInt:
  3600                           	opt stack 15
  3601                           
  3602                           ;incstack = 0
  3603                           ;i2LCDWriteInt@column stored from wreg
  3604  00179A  6E14               	movwf	i2LCDWriteInt@column,c
  3605                           
  3606                           ;lcd.c: 230: char string[3];
  3607                           ;lcd.c: 232: string[0] = value / 10 + '0';
  3608  00179C  C010  F007         	movff	i2LCDWriteInt@value,i2___awdiv@dividend
  3609  0017A0  6A08               	clrf	i2___awdiv@dividend+1,c
  3610  0017A2  0E00               	movlw	0
  3611  0017A4  6E0A               	movwf	i2___awdiv@divisor+1,c
  3612  0017A6  0E0A               	movlw	10
  3613  0017A8  6E09               	movwf	i2___awdiv@divisor,c
  3614  0017AA  EC37  F00A         	call	i2___awdiv	;wreg free
  3615  0017AE  5007               	movf	?i2___awdiv,w,c
  3616  0017B0  0F30               	addlw	48
  3617  0017B2  6E11               	movwf	i2LCDWriteInt@string,c
  3618                           
  3619                           ;lcd.c: 233: string[1] = value % 10 + '0';
  3620  0017B4  C010  F001         	movff	i2LCDWriteInt@value,i2___awmod@dividend
  3621  0017B8  6A02               	clrf	i2___awmod@dividend+1,c
  3622  0017BA  0E00               	movlw	0
  3623  0017BC  6E04               	movwf	i2___awmod@divisor+1,c
  3624  0017BE  0E0A               	movlw	10
  3625  0017C0  6E03               	movwf	i2___awmod@divisor,c
  3626  0017C2  EC69  F00B         	call	i2___awmod	;wreg free
  3627  0017C6  5001               	movf	?i2___awmod,w,c
  3628  0017C8  0F30               	addlw	48
  3629  0017CA  6E12               	movwf	i2LCDWriteInt@string+1,c
  3630                           
  3631                           ;lcd.c: 234: string[2] = '\0';
  3632  0017CC  0E00               	movlw	0
  3633  0017CE  6E13               	movwf	i2LCDWriteInt@string+2,c
  3634                           
  3635                           ;lcd.c: 236: LCDGoto(column, row);
  3636  0017D0  C00F  F006         	movff	i2LCDWriteInt@row,i2LCDGoto@row
  3637  0017D4  5014               	movf	i2LCDWriteInt@column,w,c
  3638  0017D6  EC7A  F00C         	call	i2_LCDGoto
  3639                           
  3640                           ;lcd.c: 237: LCDWriteStr(string);
  3641  0017DA  0E11               	movlw	low i2LCDWriteInt@string
  3642  0017DC  6E07               	movwf	i2LCDWriteStr@string,c
  3643  0017DE  0E00               	movlw	high i2LCDWriteInt@string
  3644  0017E0  6E08               	movwf	i2LCDWriteStr@string+1,c
  3645  0017E2  ECB9  F00A         	call	i2_LCDWriteStr	;wreg free
  3646  0017E6  0012               	return		;funcret
  3647  0017E8                     __end_ofi2_LCDWriteInt:
  3648                           	opt stack 0
  3649                           pclatu	equ	0xFFB
  3650                           pclath	equ	0xFFA
  3651                           tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           prodh	equ	0xFF4
  3656                           prodl	equ	0xFF3
  3657                           intcon	equ	0xFF2
  3658                           intcon2	equ	0xFF1
  3659                           intcon3	equ	0xFF0
  3660                           indf0	equ	0xFEF
  3661                           postinc0	equ	0xFEE
  3662                           fsr0h	equ	0xFEA
  3663                           fsr0l	equ	0xFE9
  3664                           wreg	equ	0xFE8
  3665                           postdec1	equ	0xFE5
  3666                           fsr1h	equ	0xFE2
  3667                           fsr1l	equ	0xFE1
  3668                           indf2	equ	0xFDF
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function i2___awmod *****************
  3674 ;; Defined at:
  3675 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  dividend        2    0[COMRAM] int 
  3678 ;;  divisor         2    2[COMRAM] int 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  __awmod         1    5[COMRAM] unsigned char 
  3681 ;;  __awmod         1    4[COMRAM] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  2    0[COMRAM] int 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;Total ram usage:        6 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		i2_searched
  3701 ;;		i2_LCDWriteInt
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text25
  3706  0016D2                     __ptext25:
  3707                           	opt stack 0
  3708  0016D2                     i2___awmod:
  3709                           	opt stack 20
  3710                           
  3711                           ;incstack = 0
  3712  0016D2  0E00               	movlw	0
  3713  0016D4  6E06               	movwf	i2___awmod@sign,c
  3714  0016D6  AE02               	btfss	i2___awmod@dividend+1,7,c
  3715  0016D8  D006               	goto	i2l1644
  3716  0016DA  6C01               	negf	i2___awmod@dividend,c
  3717  0016DC  1E02               	comf	i2___awmod@dividend+1,f,c
  3718  0016DE  B0D8               	btfsc	status,0,c
  3719  0016E0  2A02               	incf	i2___awmod@dividend+1,f,c
  3720  0016E2  0E01               	movlw	1
  3721  0016E4  6E06               	movwf	i2___awmod@sign,c
  3722  0016E6                     i2l1644:
  3723  0016E6  AE04               	btfss	i2___awmod@divisor+1,7,c
  3724  0016E8  D004               	goto	i2l1648
  3725  0016EA  6C03               	negf	i2___awmod@divisor,c
  3726  0016EC  1E04               	comf	i2___awmod@divisor+1,f,c
  3727  0016EE  B0D8               	btfsc	status,0,c
  3728  0016F0  2A04               	incf	i2___awmod@divisor+1,f,c
  3729  0016F2                     i2l1648:
  3730  0016F2  5003               	movf	i2___awmod@divisor,w,c
  3731  0016F4  1004               	iorwf	i2___awmod@divisor+1,w,c
  3732  0016F6  B4D8               	btfsc	status,2,c
  3733  0016F8  D018               	goto	i2l1664
  3734  0016FA  0E01               	movlw	1
  3735  0016FC  6E05               	movwf	i2___awmod@counter,c
  3736  0016FE  D004               	goto	i2l1654
  3737  001700                     i2l1652:
  3738  001700  90D8               	bcf	status,0,c
  3739  001702  3603               	rlcf	i2___awmod@divisor,f,c
  3740  001704  3604               	rlcf	i2___awmod@divisor+1,f,c
  3741  001706  2A05               	incf	i2___awmod@counter,f,c
  3742  001708                     i2l1654:
  3743  001708  AE04               	btfss	i2___awmod@divisor+1,7,c
  3744  00170A  D7FA               	goto	i2l1652
  3745  00170C                     i2l1656:
  3746  00170C  5003               	movf	i2___awmod@divisor,w,c
  3747  00170E  5C01               	subwf	i2___awmod@dividend,w,c
  3748  001710  5004               	movf	i2___awmod@divisor+1,w,c
  3749  001712  5802               	subwfb	i2___awmod@dividend+1,w,c
  3750  001714  A0D8               	btfss	status,0,c
  3751  001716  D004               	goto	i2l1660
  3752  001718  5003               	movf	i2___awmod@divisor,w,c
  3753  00171A  5E01               	subwf	i2___awmod@dividend,f,c
  3754  00171C  5004               	movf	i2___awmod@divisor+1,w,c
  3755  00171E  5A02               	subwfb	i2___awmod@dividend+1,f,c
  3756  001720                     i2l1660:
  3757  001720  90D8               	bcf	status,0,c
  3758  001722  3204               	rrcf	i2___awmod@divisor+1,f,c
  3759  001724  3203               	rrcf	i2___awmod@divisor,f,c
  3760  001726  2E05               	decfsz	i2___awmod@counter,f,c
  3761  001728  D7F1               	goto	i2l1656
  3762  00172A                     i2l1664:
  3763  00172A  5006               	movf	i2___awmod@sign,w,c
  3764  00172C  B4D8               	btfsc	status,2,c
  3765  00172E  D004               	goto	i2l1668
  3766  001730  6C01               	negf	i2___awmod@dividend,c
  3767  001732  1E02               	comf	i2___awmod@dividend+1,f,c
  3768  001734  B0D8               	btfsc	status,0,c
  3769  001736  2A02               	incf	i2___awmod@dividend+1,f,c
  3770  001738                     i2l1668:
  3771  001738  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  3772  00173C  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3773  001740  0012               	return	
  3774  001742                     __end_ofi2___awmod:
  3775                           	opt stack 0
  3776                           pclatu	equ	0xFFB
  3777                           pclath	equ	0xFFA
  3778                           tblptru	equ	0xFF8
  3779                           tblptrh	equ	0xFF7
  3780                           tblptrl	equ	0xFF6
  3781                           tablat	equ	0xFF5
  3782                           prodh	equ	0xFF4
  3783                           prodl	equ	0xFF3
  3784                           intcon	equ	0xFF2
  3785                           intcon2	equ	0xFF1
  3786                           intcon3	equ	0xFF0
  3787                           indf0	equ	0xFEF
  3788                           postinc0	equ	0xFEE
  3789                           fsr0h	equ	0xFEA
  3790                           fsr0l	equ	0xFE9
  3791                           wreg	equ	0xFE8
  3792                           postdec1	equ	0xFE5
  3793                           fsr1h	equ	0xFE2
  3794                           fsr1l	equ	0xFE1
  3795                           indf2	equ	0xFDF
  3796                           fsr2h	equ	0xFDA
  3797                           fsr2l	equ	0xFD9
  3798                           status	equ	0xFD8
  3799                           
  3800 ;; *************** function i2___awdiv *****************
  3801 ;; Defined at:
  3802 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  dividend        2    6[COMRAM] int 
  3805 ;;  divisor         2    8[COMRAM] int 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;  __awdiv         2   12[COMRAM] int 
  3808 ;;  __awdiv         1   11[COMRAM] unsigned char 
  3809 ;;  __awdiv         1   10[COMRAM] unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  2    6[COMRAM] int 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;Total ram usage:        8 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		i2_searched
  3829 ;;		i2_LCDWriteInt
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text26
  3834  00146E                     __ptext26:
  3835                           	opt stack 0
  3836  00146E                     i2___awdiv:
  3837                           	opt stack 20
  3838                           
  3839                           ;incstack = 0
  3840  00146E  0E00               	movlw	0
  3841  001470  6E0C               	movwf	i2___awdiv@sign,c
  3842  001472  AE0A               	btfss	i2___awdiv@divisor+1,7,c
  3843  001474  D006               	goto	i2l1600
  3844  001476  6C09               	negf	i2___awdiv@divisor,c
  3845  001478  1E0A               	comf	i2___awdiv@divisor+1,f,c
  3846  00147A  B0D8               	btfsc	status,0,c
  3847  00147C  2A0A               	incf	i2___awdiv@divisor+1,f,c
  3848  00147E  0E01               	movlw	1
  3849  001480  6E0C               	movwf	i2___awdiv@sign,c
  3850  001482                     i2l1600:
  3851  001482  AE08               	btfss	i2___awdiv@dividend+1,7,c
  3852  001484  D006               	goto	i2l1606
  3853  001486  6C07               	negf	i2___awdiv@dividend,c
  3854  001488  1E08               	comf	i2___awdiv@dividend+1,f,c
  3855  00148A  B0D8               	btfsc	status,0,c
  3856  00148C  2A08               	incf	i2___awdiv@dividend+1,f,c
  3857  00148E  0E01               	movlw	1
  3858  001490  1A0C               	xorwf	i2___awdiv@sign,f,c
  3859  001492                     i2l1606:
  3860  001492  0E00               	movlw	0
  3861  001494  6E0E               	movwf	i2___awdiv@quotient+1,c
  3862  001496  0E00               	movlw	0
  3863  001498  6E0D               	movwf	i2___awdiv@quotient,c
  3864  00149A  5009               	movf	i2___awdiv@divisor,w,c
  3865  00149C  100A               	iorwf	i2___awdiv@divisor+1,w,c
  3866  00149E  B4D8               	btfsc	status,2,c
  3867  0014A0  D01C               	goto	i2l1628
  3868  0014A2  0E01               	movlw	1
  3869  0014A4  6E0B               	movwf	i2___awdiv@counter,c
  3870  0014A6  D004               	goto	i2l1614
  3871  0014A8                     i2l1612:
  3872  0014A8  90D8               	bcf	status,0,c
  3873  0014AA  3609               	rlcf	i2___awdiv@divisor,f,c
  3874  0014AC  360A               	rlcf	i2___awdiv@divisor+1,f,c
  3875  0014AE  2A0B               	incf	i2___awdiv@counter,f,c
  3876  0014B0                     i2l1614:
  3877  0014B0  AE0A               	btfss	i2___awdiv@divisor+1,7,c
  3878  0014B2  D7FA               	goto	i2l1612
  3879  0014B4                     i2l1616:
  3880  0014B4  90D8               	bcf	status,0,c
  3881  0014B6  360D               	rlcf	i2___awdiv@quotient,f,c
  3882  0014B8  360E               	rlcf	i2___awdiv@quotient+1,f,c
  3883  0014BA  5009               	movf	i2___awdiv@divisor,w,c
  3884  0014BC  5C07               	subwf	i2___awdiv@dividend,w,c
  3885  0014BE  500A               	movf	i2___awdiv@divisor+1,w,c
  3886  0014C0  5808               	subwfb	i2___awdiv@dividend+1,w,c
  3887  0014C2  A0D8               	btfss	status,0,c
  3888  0014C4  D005               	goto	i2l1624
  3889  0014C6  5009               	movf	i2___awdiv@divisor,w,c
  3890  0014C8  5E07               	subwf	i2___awdiv@dividend,f,c
  3891  0014CA  500A               	movf	i2___awdiv@divisor+1,w,c
  3892  0014CC  5A08               	subwfb	i2___awdiv@dividend+1,f,c
  3893  0014CE  800D               	bsf	i2___awdiv@quotient,0,c
  3894  0014D0                     i2l1624:
  3895  0014D0  90D8               	bcf	status,0,c
  3896  0014D2  320A               	rrcf	i2___awdiv@divisor+1,f,c
  3897  0014D4  3209               	rrcf	i2___awdiv@divisor,f,c
  3898  0014D6  2E0B               	decfsz	i2___awdiv@counter,f,c
  3899  0014D8  D7ED               	goto	i2l1616
  3900  0014DA                     i2l1628:
  3901  0014DA  500C               	movf	i2___awdiv@sign,w,c
  3902  0014DC  B4D8               	btfsc	status,2,c
  3903  0014DE  D004               	goto	i2l1632
  3904  0014E0  6C0D               	negf	i2___awdiv@quotient,c
  3905  0014E2  1E0E               	comf	i2___awdiv@quotient+1,f,c
  3906  0014E4  B0D8               	btfsc	status,0,c
  3907  0014E6  2A0E               	incf	i2___awdiv@quotient+1,f,c
  3908  0014E8                     i2l1632:
  3909  0014E8  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
  3910  0014EC  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  3911  0014F0  0012               	return	
  3912  0014F2                     __end_ofi2___awdiv:
  3913                           	opt stack 0
  3914                           pclatu	equ	0xFFB
  3915                           pclath	equ	0xFFA
  3916                           tblptru	equ	0xFF8
  3917                           tblptrh	equ	0xFF7
  3918                           tblptrl	equ	0xFF6
  3919                           tablat	equ	0xFF5
  3920                           prodh	equ	0xFF4
  3921                           prodl	equ	0xFF3
  3922                           intcon	equ	0xFF2
  3923                           intcon2	equ	0xFF1
  3924                           intcon3	equ	0xFF0
  3925                           indf0	equ	0xFEF
  3926                           postinc0	equ	0xFEE
  3927                           fsr0h	equ	0xFEA
  3928                           fsr0l	equ	0xFE9
  3929                           wreg	equ	0xFE8
  3930                           postdec1	equ	0xFE5
  3931                           fsr1h	equ	0xFE2
  3932                           fsr1l	equ	0xFE1
  3933                           indf2	equ	0xFDF
  3934                           fsr2h	equ	0xFDA
  3935                           fsr2l	equ	0xFD9
  3936                           status	equ	0xFD8
  3937                           
  3938 ;; *************** function i2_LCDWriteStr *****************
  3939 ;; Defined at:
  3940 ;;		line 193 in file "lcd.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  string          2    6[COMRAM] PTR const unsigned char 
  3943 ;;		 -> LCDWriteInt@string(3), LCDWriteFloat@string(5), LCDWriteHexa@string(3), STR_1(11), 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  LCDWriteStr     1   10[COMRAM] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;Total ram usage:        5 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    3
  3962 ;; This function calls:
  3963 ;;		i2_LCDPutChar
  3964 ;; This function is called by:
  3965 ;;		i2_LCDWriteInt
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text27
  3970  001572                     __ptext27:
  3971                           	opt stack 0
  3972  001572                     i2_LCDWriteStr:
  3973                           	opt stack 15
  3974                           
  3975                           ;lcd.c: 195: UINT8_T i = 0;
  3976                           
  3977                           ;incstack = 0
  3978  001572  0E00               	movlw	0
  3979  001574  6E0B               	movwf	i2LCDWriteStr@i,c
  3980                           
  3981                           ;lcd.c: 197: while (string[i])
  3982  001576  D01E               	goto	i2l1590
  3983  001578                     i2l1586:
  3984                           
  3985                           ;lcd.c: 198: LCDPutChar(string[i++]);
  3986  001578  500B               	movf	i2LCDWriteStr@i,w,c
  3987  00157A  0D01               	mullw	1
  3988  00157C  C007  F009         	movff	i2LCDWriteStr@string,??i2_LCDWriteStr
  3989  001580  C008  F00A         	movff	i2LCDWriteStr@string+1,??i2_LCDWriteStr+1
  3990  001584  50F3               	movf	prodl,w,c
  3991  001586  2609               	addwf	??i2_LCDWriteStr,f,c
  3992  001588  50F4               	movf	prodh,w,c
  3993  00158A  220A               	addwfc	??i2_LCDWriteStr+1,f,c
  3994  00158C  C009  FFF6         	movff	??i2_LCDWriteStr,tblptrl
  3995  001590  C00A  FFF7         	movff	??i2_LCDWriteStr+1,tblptrh
  3996  001594  0E00               	movlw	low (__smallconst shr (0+16))
  3997  001596  6EF8               	movwf	tblptru,c
  3998  001598  0E0F               	movlw	(high __ramtop+-1)
  3999  00159A  64F7               	cpfsgt	tblptrh,c
  4000  00159C  D003               	bra	i2u84_47
  4001  00159E  0008               	tblrd		*
  4002  0015A0  50F5               	movf	tablat,w,c
  4003  0015A2  D005               	bra	i2u84_40
  4004  0015A4                     i2u84_47:
  4005  0015A4  CFF6 FFE9          	movff	tblptrl,fsr0l
  4006  0015A8  CFF7 FFEA          	movff	tblptrh,fsr0h
  4007  0015AC  50EF               	movf	indf0,w,c
  4008  0015AE                     i2u84_40:
  4009  0015AE  EC3A  F00D         	call	i2_LCDPutChar
  4010  0015B2  2A0B               	incf	i2LCDWriteStr@i,f,c
  4011  0015B4                     i2l1590:
  4012  0015B4  500B               	movf	i2LCDWriteStr@i,w,c
  4013  0015B6  0D01               	mullw	1
  4014  0015B8  C007  F009         	movff	i2LCDWriteStr@string,??i2_LCDWriteStr
  4015  0015BC  C008  F00A         	movff	i2LCDWriteStr@string+1,??i2_LCDWriteStr+1
  4016  0015C0  50F3               	movf	prodl,w,c
  4017  0015C2  2609               	addwf	??i2_LCDWriteStr,f,c
  4018  0015C4  50F4               	movf	prodh,w,c
  4019  0015C6  220A               	addwfc	??i2_LCDWriteStr+1,f,c
  4020  0015C8  C009  FFF6         	movff	??i2_LCDWriteStr,tblptrl
  4021  0015CC  C00A  FFF7         	movff	??i2_LCDWriteStr+1,tblptrh
  4022  0015D0  0E00               	movlw	low (__smallconst shr (0+16))
  4023  0015D2  6EF8               	movwf	tblptru,c
  4024  0015D4  0E0F               	movlw	(high __ramtop+-1)
  4025  0015D6  64F7               	cpfsgt	tblptrh,c
  4026  0015D8  D003               	bra	i2u85_47
  4027  0015DA  0008               	tblrd		*
  4028  0015DC  50F5               	movf	tablat,w,c
  4029  0015DE  D005               	bra	i2u85_40
  4030  0015E0                     i2u85_47:
  4031  0015E0  CFF6 FFE9          	movff	tblptrl,fsr0l
  4032  0015E4  CFF7 FFEA          	movff	tblptrh,fsr0h
  4033  0015E8  50EF               	movf	indf0,w,c
  4034  0015EA                     i2u85_40:
  4035  0015EA  0900               	iorlw	0
  4036  0015EC  B4D8               	btfsc	status,2,c
  4037  0015EE  0012               	return	
  4038  0015F0  D7C3               	goto	i2l1586
  4039  0015F2                     __end_ofi2_LCDWriteStr:
  4040                           	opt stack 0
  4041                           pclatu	equ	0xFFB
  4042                           pclath	equ	0xFFA
  4043                           tblptru	equ	0xFF8
  4044                           tblptrh	equ	0xFF7
  4045                           tblptrl	equ	0xFF6
  4046                           tablat	equ	0xFF5
  4047                           prodh	equ	0xFF4
  4048                           prodl	equ	0xFF3
  4049                           intcon	equ	0xFF2
  4050                           intcon2	equ	0xFF1
  4051                           intcon3	equ	0xFF0
  4052                           indf0	equ	0xFEF
  4053                           postinc0	equ	0xFEE
  4054                           fsr0h	equ	0xFEA
  4055                           fsr0l	equ	0xFE9
  4056                           wreg	equ	0xFE8
  4057                           postdec1	equ	0xFE5
  4058                           fsr1h	equ	0xFE2
  4059                           fsr1l	equ	0xFE1
  4060                           indf2	equ	0xFDF
  4061                           fsr2h	equ	0xFDA
  4062                           fsr2l	equ	0xFD9
  4063                           status	equ	0xFD8
  4064                           
  4065 ;; *************** function i2_LCDPutChar *****************
  4066 ;; Defined at:
  4067 ;;		line 180 in file "lcd.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  data            1    wreg     unsigned char 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  data            1    5[COMRAM] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;Total ram usage:        1 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    2
  4088 ;; This function calls:
  4089 ;;		i2_WaitLCD
  4090 ;;		i2_WriteByte
  4091 ;; This function is called by:
  4092 ;;		i2_LCDWriteStr
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text28
  4097  001A74                     __ptext28:
  4098                           	opt stack 0
  4099  001A74                     i2_LCDPutChar:
  4100                           	opt stack 15
  4101                           
  4102                           ;incstack = 0
  4103                           ;i2LCDPutChar@data stored from wreg
  4104  001A74  6E06               	movwf	i2LCDPutChar@data,c
  4105                           
  4106                           ;lcd.c: 182: WriteByte(0, data);
  4107  001A76  C006  F004         	movff	i2LCDPutChar@data,i2WriteByte@data
  4108  001A7A  0E00               	movlw	0
  4109  001A7C  EC12  F00D         	call	i2_WriteByte
  4110                           
  4111                           ;lcd.c: 183: WaitLCD();
  4112  001A80  EC43  F00D         	call	i2_WaitLCD	;wreg free
  4113  001A84  0012               	return		;funcret
  4114  001A86                     __end_ofi2_LCDPutChar:
  4115                           	opt stack 0
  4116                           pclatu	equ	0xFFB
  4117                           pclath	equ	0xFFA
  4118                           tblptru	equ	0xFF8
  4119                           tblptrh	equ	0xFF7
  4120                           tblptrl	equ	0xFF6
  4121                           tablat	equ	0xFF5
  4122                           prodh	equ	0xFF4
  4123                           prodl	equ	0xFF3
  4124                           intcon	equ	0xFF2
  4125                           intcon2	equ	0xFF1
  4126                           intcon3	equ	0xFF0
  4127                           indf0	equ	0xFEF
  4128                           postinc0	equ	0xFEE
  4129                           fsr0h	equ	0xFEA
  4130                           fsr0l	equ	0xFE9
  4131                           wreg	equ	0xFE8
  4132                           postdec1	equ	0xFE5
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           indf2	equ	0xFDF
  4136                           fsr2h	equ	0xFDA
  4137                           fsr2l	equ	0xFD9
  4138                           status	equ	0xFD8
  4139                           
  4140 ;; *************** function i2_LCDGoto *****************
  4141 ;; Defined at:
  4142 ;;		line 171 in file "lcd.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  column          1    wreg     unsigned char 
  4145 ;;  row             1    5[COMRAM] unsigned char 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  column          1   10[COMRAM] unsigned char 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4157 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;Total ram usage:        6 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    2
  4164 ;; This function calls:
  4165 ;;		i2_WaitLCD
  4166 ;;		i2_WriteByte
  4167 ;; This function is called by:
  4168 ;;		i2_LCDWriteInt
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text29
  4173  0018F4                     __ptext29:
  4174                           	opt stack 0
  4175  0018F4                     i2_LCDGoto:
  4176                           	opt stack 16
  4177                           
  4178                           ;incstack = 0
  4179                           ;i2LCDGoto@column stored from wreg
  4180  0018F4  6E0B               	movwf	i2LCDGoto@column,c
  4181                           
  4182                           ;lcd.c: 173: if ((row > (2 - 1)) || (column > (16 - 1)))
  4183  0018F6  0E02               	movlw	2
  4184  0018F8  6006               	cpfslt	i2LCDGoto@row,c
  4185  0018FA  0012               	return	
  4186  0018FC  0E0F               	movlw	15
  4187  0018FE  640B               	cpfsgt	i2LCDGoto@column,c
  4188  001900  D001               	goto	i2l1574
  4189  001902  0012               	return	
  4190  001904                     i2l1574:
  4191                           
  4192                           ;lcd.c: 176: WriteByte(1, (row == 1) ? (0xC0 | column) : (0x80 | column));
  4193  001904  0406               	decf	i2LCDGoto@row,w,c
  4194  001906  B4D8               	btfsc	status,2,c
  4195  001908  D002               	goto	i2l1578
  4196  00190A  0E80               	movlw	128
  4197  00190C  D001               	goto	L2
  4198  00190E                     i2l1578:
  4199  00190E  0EC0               	movlw	192
  4200  001910                     L2:
  4201  001910  C00B  F007         	movff	i2LCDGoto@column,??i2_LCDGoto
  4202  001914  6A08               	clrf	(??i2_LCDGoto+1)& (0+255),c
  4203  001916  1007               	iorwf	??i2_LCDGoto,w,c
  4204  001918  6E09               	movwf	i2_LCDGoto$670,c
  4205  00191A  5008               	movf	??i2_LCDGoto+1,w,c
  4206  00191C  6E0A               	movwf	i2_LCDGoto$670+1,c
  4207  00191E  C009  F004         	movff	i2_LCDGoto$670,i2WriteByte@data
  4208  001922  0E01               	movlw	1
  4209  001924  EC12  F00D         	call	i2_WriteByte
  4210                           
  4211                           ;lcd.c: 177: WaitLCD();
  4212  001928  EC43  F00D         	call	i2_WaitLCD	;wreg free
  4213  00192C  0012               	return		;funcret
  4214  00192E                     __end_ofi2_LCDGoto:
  4215                           	opt stack 0
  4216                           pclatu	equ	0xFFB
  4217                           pclath	equ	0xFFA
  4218                           tblptru	equ	0xFF8
  4219                           tblptrh	equ	0xFF7
  4220                           tblptrl	equ	0xFF6
  4221                           tablat	equ	0xFF5
  4222                           prodh	equ	0xFF4
  4223                           prodl	equ	0xFF3
  4224                           intcon	equ	0xFF2
  4225                           intcon2	equ	0xFF1
  4226                           intcon3	equ	0xFF0
  4227                           indf0	equ	0xFEF
  4228                           postinc0	equ	0xFEE
  4229                           fsr0h	equ	0xFEA
  4230                           fsr0l	equ	0xFE9
  4231                           wreg	equ	0xFE8
  4232                           postdec1	equ	0xFE5
  4233                           fsr1h	equ	0xFE2
  4234                           fsr1l	equ	0xFE1
  4235                           indf2	equ	0xFDF
  4236                           fsr2h	equ	0xFDA
  4237                           fsr2l	equ	0xFD9
  4238                           status	equ	0xFD8
  4239                           
  4240 ;; *************** function i2_WriteByte *****************
  4241 ;; Defined at:
  4242 ;;		line 83 in file "lcd.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  cmd             1    wreg     unsigned char 
  4245 ;;  data            1    3[COMRAM] unsigned char 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  cmd             1    4[COMRAM] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4257 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    1
  4264 ;; This function calls:
  4265 ;;		i2_WriteNibble
  4266 ;; This function is called by:
  4267 ;;		i2_LCDGoto
  4268 ;;		i2_LCDPutChar
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text30
  4273  001A24                     __ptext30:
  4274                           	opt stack 0
  4275  001A24                     i2_WriteByte:
  4276                           	opt stack 15
  4277                           
  4278                           ;incstack = 0
  4279                           ;i2WriteByte@cmd stored from wreg
  4280  001A24  6E05               	movwf	i2WriteByte@cmd,c
  4281                           
  4282                           ;lcd.c: 85: WriteNibble(cmd, data >> 4);
  4283  001A26  3804               	swapf	i2WriteByte@data,w,c
  4284  001A28  0B0F               	andlw	15
  4285  001A2A  6E01               	movwf	i2WriteNibble@data,c
  4286  001A2C  5005               	movf	i2WriteByte@cmd,w,c
  4287  001A2E  EC3B  F00C         	call	i2_WriteNibble
  4288                           
  4289                           ;lcd.c: 86: WriteNibble(cmd, data);
  4290  001A32  C004  F001         	movff	i2WriteByte@data,i2WriteNibble@data
  4291  001A36  5005               	movf	i2WriteByte@cmd,w,c
  4292  001A38  EC3B  F00C         	call	i2_WriteNibble
  4293  001A3C  0012               	return		;funcret
  4294  001A3E                     __end_ofi2_WriteByte:
  4295                           	opt stack 0
  4296                           pclatu	equ	0xFFB
  4297                           pclath	equ	0xFFA
  4298                           tblptru	equ	0xFF8
  4299                           tblptrh	equ	0xFF7
  4300                           tblptrl	equ	0xFF6
  4301                           tablat	equ	0xFF5
  4302                           prodh	equ	0xFF4
  4303                           prodl	equ	0xFF3
  4304                           intcon	equ	0xFF2
  4305                           intcon2	equ	0xFF1
  4306                           intcon3	equ	0xFF0
  4307                           indf0	equ	0xFEF
  4308                           postinc0	equ	0xFEE
  4309                           fsr0h	equ	0xFEA
  4310                           fsr0l	equ	0xFE9
  4311                           wreg	equ	0xFE8
  4312                           postdec1	equ	0xFE5
  4313                           fsr1h	equ	0xFE2
  4314                           fsr1l	equ	0xFE1
  4315                           indf2	equ	0xFDF
  4316                           fsr2h	equ	0xFDA
  4317                           fsr2l	equ	0xFD9
  4318                           status	equ	0xFD8
  4319                           
  4320 ;; *************** function i2_WriteNibble *****************
  4321 ;; Defined at:
  4322 ;;		line 66 in file "lcd.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  cmd             1    wreg     unsigned char 
  4325 ;;  data            1    0[COMRAM] unsigned char 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  cmd             1    2[COMRAM] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4337 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;Total ram usage:        3 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		i2_WriteByte
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text31
  4351  001876                     __ptext31:
  4352                           	opt stack 0
  4353  001876                     i2_WriteNibble:
  4354                           	opt stack 15
  4355                           
  4356                           ;incstack = 0
  4357                           ;i2WriteNibble@cmd stored from wreg
  4358  001876  6E03               	movwf	i2WriteNibble@cmd,c
  4359                           
  4360                           ;lcd.c: 68: LATDbits.LATD4 = (cmd ? 0 : 1);
  4361  001878  5003               	movf	i2WriteNibble@cmd,w,c
  4362  00187A  A4D8               	btfss	status,2,c
  4363  00187C  D003               	goto	i2u60_40
  4364  00187E  6A02               	clrf	??i2_WriteNibble& (0+255),c
  4365  001880  2A02               	incf	??i2_WriteNibble& (0+255),f,c
  4366  001882  D001               	goto	i2u61_48
  4367  001884                     i2u60_40:
  4368  001884  6A02               	clrf	??i2_WriteNibble& (0+255),c
  4369  001886                     i2u61_48:
  4370  001886  3A02               	swapf	??i2_WriteNibble,f,c
  4371  001888  508C               	movf	3980,w,c	;volatile
  4372  00188A  1802               	xorwf	??i2_WriteNibble,w,c
  4373  00188C  0BEF               	andlw	-17
  4374  00188E  1802               	xorwf	??i2_WriteNibble,w,c
  4375  001890  6E8C               	movwf	3980,c	;volatile
  4376                           
  4377                           ;lcd.c: 69: LATDbits.LATD5 = 0;
  4378  001892  9A8C               	bcf	3980,5,c	;volatile
  4379                           
  4380                           ;lcd.c: 70: LATDbits.LATD6 = 1;
  4381  001894  8C8C               	bsf	3980,6,c	;volatile
  4382                           
  4383                           ;lcd.c: 72: LATDbits.LATD0 = LATDbits.LATD1 = LATDbits.LATD2 = LATDbits.LATD3 = 0;
  4384  001896  968C               	bcf	3980,3,c	;volatile
  4385  001898  948C               	bcf	3980,2,c	;volatile
  4386  00189A  928C               	bcf	3980,1,c	;volatile
  4387  00189C  908C               	bcf	3980,0,c	;volatile
  4388                           
  4389                           ;lcd.c: 73: __nop();
  4390  00189E  F000               	nop	
  4391                           
  4392                           ;lcd.c: 74: __nop();
  4393  0018A0  F000               	nop	
  4394                           
  4395                           ;lcd.c: 76: LATD = (LATD & 0xF0) | (data & 0x0F);
  4396  0018A2  C001  F002         	movff	i2WriteNibble@data,??i2_WriteNibble
  4397  0018A6  0E0F               	movlw	15
  4398  0018A8  1602               	andwf	??i2_WriteNibble,f,c
  4399  0018AA  508C               	movf	3980,w,c	;volatile
  4400  0018AC  0BF0               	andlw	240
  4401  0018AE  1002               	iorwf	??i2_WriteNibble,w,c
  4402  0018B0  6E8C               	movwf	3980,c	;volatile
  4403                           
  4404                           ;lcd.c: 77: __nop();
  4405  0018B2  F000               	nop	
  4406                           
  4407                           ;lcd.c: 78: __nop();
  4408  0018B4  F000               	nop	
  4409                           
  4410                           ;lcd.c: 80: LATDbits.LATD6 = 0;
  4411  0018B6  9C8C               	bcf	3980,6,c	;volatile
  4412  0018B8  0012               	return		;funcret
  4413  0018BA                     __end_ofi2_WriteNibble:
  4414                           	opt stack 0
  4415                           pclatu	equ	0xFFB
  4416                           pclath	equ	0xFFA
  4417                           tblptru	equ	0xFF8
  4418                           tblptrh	equ	0xFF7
  4419                           tblptrl	equ	0xFF6
  4420                           tablat	equ	0xFF5
  4421                           prodh	equ	0xFF4
  4422                           prodl	equ	0xFF3
  4423                           intcon	equ	0xFF2
  4424                           intcon2	equ	0xFF1
  4425                           intcon3	equ	0xFF0
  4426                           indf0	equ	0xFEF
  4427                           postinc0	equ	0xFEE
  4428                           fsr0h	equ	0xFEA
  4429                           fsr0l	equ	0xFE9
  4430                           wreg	equ	0xFE8
  4431                           postdec1	equ	0xFE5
  4432                           fsr1h	equ	0xFE2
  4433                           fsr1l	equ	0xFE1
  4434                           indf2	equ	0xFDF
  4435                           fsr2h	equ	0xFDA
  4436                           fsr2l	equ	0xFD9
  4437                           status	equ	0xFD8
  4438                           
  4439 ;; *************** function i2_WaitLCD *****************
  4440 ;; Defined at:
  4441 ;;		line 52 in file "lcd.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  WaitLCD         1    1[COMRAM] unsigned char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      void 
  4448 ;; Registers used:
  4449 ;;		wreg, status,2, status,0, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;Total ram usage:        1 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    1
  4462 ;; This function calls:
  4463 ;;		i2_ReadByte
  4464 ;; This function is called by:
  4465 ;;		i2_LCDGoto
  4466 ;;		i2_LCDPutChar
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text32
  4471  001A86                     __ptext32:
  4472                           	opt stack 0
  4473  001A86                     i2_WaitLCD:
  4474                           	opt stack 15
  4475                           
  4476                           ;lcd.c: 54: UINT8_T status;
  4477                           ;lcd.c: 56: LATDbits.LATD4 = 0;
  4478                           
  4479                           ;incstack = 0
  4480  001A86  988C               	bcf	3980,4,c	;volatile
  4481                           
  4482                           ;lcd.c: 57: LATDbits.LATD5 = 1;
  4483  001A88  8A8C               	bsf	3980,5,c	;volatile
  4484  001A8A                     i2l1452:
  4485                           
  4486                           ;lcd.c: 60: status = ReadByte();
  4487  001A8A  ECAF  F00C         	call	i2_ReadByte	;wreg free
  4488  001A8E  6E02               	movwf	i2WaitLCD@status,c
  4489                           
  4490                           ;lcd.c: 61: } while (status & 0x80);
  4491  001A90  BE02               	btfsc	i2WaitLCD@status,7,c
  4492  001A92  D7FB               	goto	i2l1452
  4493                           
  4494                           ;lcd.c: 63: LATDbits.LATD5 = 0;
  4495  001A94  9A8C               	bcf	3980,5,c	;volatile
  4496  001A96  0012               	return		;funcret
  4497  001A98                     __end_ofi2_WaitLCD:
  4498                           	opt stack 0
  4499                           pclatu	equ	0xFFB
  4500                           pclath	equ	0xFFA
  4501                           tblptru	equ	0xFF8
  4502                           tblptrh	equ	0xFF7
  4503                           tblptrl	equ	0xFF6
  4504                           tablat	equ	0xFF5
  4505                           prodh	equ	0xFF4
  4506                           prodl	equ	0xFF3
  4507                           intcon	equ	0xFF2
  4508                           intcon2	equ	0xFF1
  4509                           intcon3	equ	0xFF0
  4510                           indf0	equ	0xFEF
  4511                           postinc0	equ	0xFEE
  4512                           fsr0h	equ	0xFEA
  4513                           fsr0l	equ	0xFE9
  4514                           wreg	equ	0xFE8
  4515                           postdec1	equ	0xFE5
  4516                           fsr1h	equ	0xFE2
  4517                           fsr1l	equ	0xFE1
  4518                           indf2	equ	0xFDF
  4519                           fsr2h	equ	0xFDA
  4520                           fsr2l	equ	0xFD9
  4521                           status	equ	0xFD8
  4522                           
  4523 ;; *************** function i2_ReadByte *****************
  4524 ;; Defined at:
  4525 ;;		line 21 in file "lcd.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;		None
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  ReadByte        1    0[COMRAM] unsigned char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      unsigned char 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;Total ram usage:        1 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		i2_WaitLCD
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text33
  4553  00195E                     __ptext33:
  4554                           	opt stack 0
  4555  00195E                     i2_ReadByte:
  4556                           	opt stack 15
  4557                           
  4558                           ;lcd.c: 23: UINT8_T status;
  4559                           ;lcd.c: 25: TRISDbits.TRISD0 = 1;
  4560                           
  4561                           ;incstack = 0
  4562  00195E  8095               	bsf	3989,0,c	;volatile
  4563                           
  4564                           ;lcd.c: 26: TRISDbits.TRISD1 = 1;
  4565  001960  8295               	bsf	3989,1,c	;volatile
  4566                           
  4567                           ;lcd.c: 27: TRISDbits.TRISD2 = 1;
  4568  001962  8495               	bsf	3989,2,c	;volatile
  4569                           
  4570                           ;lcd.c: 28: TRISDbits.TRISD3 = 1;
  4571  001964  8695               	bsf	3989,3,c	;volatile
  4572                           
  4573                           ;lcd.c: 30: LATDbits.LATD6 = 1;
  4574  001966  8C8C               	bsf	3980,6,c	;volatile
  4575                           
  4576                           ;lcd.c: 31: __nop();
  4577  001968  F000               	nop	
  4578                           
  4579                           ;lcd.c: 32: __nop();
  4580  00196A  F000               	nop	
  4581                           
  4582                           ;lcd.c: 34: status = PORTD << 4;
  4583  00196C  3883               	swapf	3971,w,c	;volatile
  4584  00196E  0BF0               	andlw	240
  4585  001970  6E01               	movwf	i2ReadByte@status,c
  4586                           
  4587                           ;lcd.c: 35: LATDbits.LATD6 = 0;
  4588  001972  9C8C               	bcf	3980,6,c	;volatile
  4589                           
  4590                           ;lcd.c: 37: LATDbits.LATD6 = 1;
  4591  001974  8C8C               	bsf	3980,6,c	;volatile
  4592                           
  4593                           ;lcd.c: 38: __nop();
  4594  001976  F000               	nop	
  4595                           
  4596                           ;lcd.c: 39: __nop();
  4597  001978  F000               	nop	
  4598                           
  4599                           ;lcd.c: 41: status |= PORTD & 0x0F;
  4600  00197A  5083               	movf	3971,w,c	;volatile
  4601  00197C  0B0F               	andlw	15
  4602  00197E  1201               	iorwf	i2ReadByte@status,f,c
  4603                           
  4604                           ;lcd.c: 42: LATDbits.LATD6 = 0;
  4605  001980  9C8C               	bcf	3980,6,c	;volatile
  4606                           
  4607                           ;lcd.c: 44: TRISDbits.TRISD0 = 0;
  4608  001982  9095               	bcf	3989,0,c	;volatile
  4609                           
  4610                           ;lcd.c: 45: TRISDbits.TRISD1 = 0;
  4611  001984  9295               	bcf	3989,1,c	;volatile
  4612                           
  4613                           ;lcd.c: 46: TRISDbits.TRISD2 = 0;
  4614  001986  9495               	bcf	3989,2,c	;volatile
  4615                           
  4616                           ;lcd.c: 47: TRISDbits.TRISD3 = 0;
  4617  001988  9695               	bcf	3989,3,c	;volatile
  4618                           
  4619                           ;lcd.c: 49: return(status);
  4620  00198A  5001               	movf	i2ReadByte@status,w,c
  4621  00198C  0012               	return	
  4622  00198E                     __end_ofi2_ReadByte:
  4623                           	opt stack 0
  4624                           pclatu	equ	0xFFB
  4625                           pclath	equ	0xFFA
  4626                           tblptru	equ	0xFF8
  4627                           tblptrh	equ	0xFF7
  4628                           tblptrl	equ	0xFF6
  4629                           tablat	equ	0xFF5
  4630                           prodh	equ	0xFF4
  4631                           prodl	equ	0xFF3
  4632                           intcon	equ	0xFF2
  4633                           intcon2	equ	0xFF1
  4634                           intcon3	equ	0xFF0
  4635                           indf0	equ	0xFEF
  4636                           postinc0	equ	0xFEE
  4637                           fsr0h	equ	0xFEA
  4638                           fsr0l	equ	0xFE9
  4639                           wreg	equ	0xFE8
  4640                           postdec1	equ	0xFE5
  4641                           fsr1h	equ	0xFE2
  4642                           fsr1l	equ	0xFE1
  4643                           indf2	equ	0xFDF
  4644                           fsr2h	equ	0xFDA
  4645                           fsr2l	equ	0xFD9
  4646                           status	equ	0xFD8
  4647                           pclatu	equ	0xFFB
  4648                           pclath	equ	0xFFA
  4649                           tblptru	equ	0xFF8
  4650                           tblptrh	equ	0xFF7
  4651                           tblptrl	equ	0xFF6
  4652                           tablat	equ	0xFF5
  4653                           prodh	equ	0xFF4
  4654                           prodl	equ	0xFF3
  4655                           intcon	equ	0xFF2
  4656                           intcon2	equ	0xFF1
  4657                           intcon3	equ	0xFF0
  4658                           indf0	equ	0xFEF
  4659                           postinc0	equ	0xFEE
  4660                           fsr0h	equ	0xFEA
  4661                           fsr0l	equ	0xFE9
  4662                           wreg	equ	0xFE8
  4663                           postdec1	equ	0xFE5
  4664                           fsr1h	equ	0xFE2
  4665                           fsr1l	equ	0xFE1
  4666                           indf2	equ	0xFDF
  4667                           fsr2h	equ	0xFDA
  4668                           fsr2l	equ	0xFD9
  4669                           status	equ	0xFD8
  4670                           
  4671                           	psect	rparam
  4672  0000                     pclatu	equ	0xFFB
  4673                           pclath	equ	0xFFA
  4674                           tblptru	equ	0xFF8
  4675                           tblptrh	equ	0xFF7
  4676                           tblptrl	equ	0xFF6
  4677                           tablat	equ	0xFF5
  4678                           prodh	equ	0xFF4
  4679                           prodl	equ	0xFF3
  4680                           intcon	equ	0xFF2
  4681                           intcon2	equ	0xFF1
  4682                           intcon3	equ	0xFF0
  4683                           indf0	equ	0xFEF
  4684                           postinc0	equ	0xFEE
  4685                           fsr0h	equ	0xFEA
  4686                           fsr0l	equ	0xFE9
  4687                           wreg	equ	0xFE8
  4688                           postdec1	equ	0xFE5
  4689                           fsr1h	equ	0xFE2
  4690                           fsr1l	equ	0xFE1
  4691                           indf2	equ	0xFDF
  4692                           fsr2h	equ	0xFDA
  4693                           fsr2l	equ	0xFD9
  4694                           status	equ	0xFD8
  4695                           
  4696                           	psect	temp
  4697  000037                     btemp:
  4698                           	opt stack 0
  4699  000037                     	ds	1
  4700  0000                     int$flags	set	btemp
  4701                           pclatu	equ	0xFFB
  4702                           pclath	equ	0xFFA
  4703                           tblptru	equ	0xFF8
  4704                           tblptrh	equ	0xFF7
  4705                           tblptrl	equ	0xFF6
  4706                           tablat	equ	0xFF5
  4707                           prodh	equ	0xFF4
  4708                           prodl	equ	0xFF3
  4709                           intcon	equ	0xFF2
  4710                           intcon2	equ	0xFF1
  4711                           intcon3	equ	0xFF0
  4712                           indf0	equ	0xFEF
  4713                           postinc0	equ	0xFEE
  4714                           fsr0h	equ	0xFEA
  4715                           fsr0l	equ	0xFE9
  4716                           wreg	equ	0xFE8
  4717                           postdec1	equ	0xFE5
  4718                           fsr1h	equ	0xFE2
  4719                           fsr1l	equ	0xFE1
  4720                           indf2	equ	0xFDF
  4721                           fsr2h	equ	0xFDA
  4722                           fsr2l	equ	0xFD9
  4723                           status	equ	0xFD8


Data Sizes:
    Strings     28
    Constant    0
    Data        341
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      54
    BANK0           160     14      17
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    LCDWriteStr@string	PTR const unsigned char  size(2) Largest target is 11
		 -> LCDWriteInt@string(BANK0[3]), LCDWriteFloat@string(COMRAM[5]), LCDWriteHexa@string(COMRAM[3]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _LCDWriteInt->___awdiv
    _LCDWriteStr->_LCDPutChar
    _LCDPutChar->_WriteByte
    _LCDGoto->_WriteByte
    _LCDInit->_WriteNibble
    _LCDClear->_WriteByte
    _WriteByte->_WriteNibble
    _WaitLCD->_ReadByte
    _searched->___awdiv
    ___awdiv->___awmod

Critical Paths under _ISR in COMRAM

    _ISR->i2_searched
    i2_searched->i2___awdiv
    i2_show_debug->i2_LCDWriteInt
    i2_LCDWriteInt->i2___awdiv
    i2___awdiv->i2___awmod
    i2_LCDWriteStr->i2_LCDPutChar
    i2_LCDPutChar->i2_WriteByte
    i2_LCDGoto->i2_WriteByte
    i2_WriteByte->i2_WriteNibble
    i2_WaitLCD->i2_ReadByte

Critical Paths under _main in BANK0

    _main->_searched
    _show_debug->_LCDWriteInt

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5   15848
                                              9 BANK0      5     0      5
                           _searched
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   13793
                         _init_debug
 ---------------------------------------------------------------------------------
 (2) _init_debug                                           0     0      0   13793
                           _LCDClear
                            _LCDGoto
                            _LCDInit
                        _LCDWriteStr
                         _show_debug
 ---------------------------------------------------------------------------------
 (3) _show_debug                                           0     0      0    6535
                        _LCDWriteInt
 ---------------------------------------------------------------------------------
 (4) _LCDWriteInt                                          6     4      2    6535
                                              0 BANK0      6     4      2
                            _LCDGoto
                        _LCDWriteStr
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) _LCDWriteStr                                          5     3      2    2115
                                             46 COMRAM     5     3      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (6) _LCDPutChar                                           1     1      0    1721
                                             45 COMRAM     1     1      0
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _LCDGoto                                              6     5      1    2137
                                             45 COMRAM     6     5      1
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (3) _LCDInit                                              1     1      0    1307
                                             43 COMRAM     1     1      0
                            _WaitLCD
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDClear                                             1     1      0    1699
                                             45 COMRAM     1     1      0
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (7) _WriteByte                                            2     1      1    1652
                                             43 COMRAM     2     1      1
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (8) _WriteNibble                                          3     2      1    1260
                                             40 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (7) _WaitLCD                                              1     1      0      47
                                             41 COMRAM     1     1      0
                           _ReadByte
 ---------------------------------------------------------------------------------
 (8) _ReadByte                                             1     1      0      24
                                             40 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _searched                                             9     9      0    2055
                                              0 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                         _flashlight
 ---------------------------------------------------------------------------------
 (2) _flashlight                                           1     1      0       0
                                             40 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1056
                                             40 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                             46 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 17    17      0    2943
                                             23 COMRAM    17    17      0
                          _pedometer
                        _synchronize
                       i2_flashlight
                         i2_searched
 ---------------------------------------------------------------------------------
 (10) i2_searched                                          9     9      0     947
                                             14 COMRAM     9     9      0
                          i2___awdiv
                          i2___awmod
                       i2_flashlight
 ---------------------------------------------------------------------------------
 (11) i2_flashlight                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _synchronize                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _pedometer                                           0     0      0    1927
                       i2_show_debug
 ---------------------------------------------------------------------------------
 (11) i2_show_debug                                        0     0      0    1927
                      i2_LCDWriteInt
 ---------------------------------------------------------------------------------
 (12) i2_LCDWriteInt                                       6     4      2    1927
                                             14 COMRAM     6     4      2
                          i2_LCDGoto
                      i2_LCDWriteStr
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (11) i2___awmod                                           6     2      4     452
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___awdiv                                           8     4      4     404
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (13) i2_LCDWriteStr                                       5     3      2     421
                                              6 COMRAM     5     3      2
                       i2_LCDPutChar
 ---------------------------------------------------------------------------------
 (14) i2_LCDPutChar                                        1     1      0     305
                                              5 COMRAM     1     1      0
                          i2_WaitLCD
                        i2_WriteByte
 ---------------------------------------------------------------------------------
 (13) i2_LCDGoto                                           6     5      1     443
                                              5 COMRAM     6     5      1
                          i2_WaitLCD
                        i2_WriteByte
 ---------------------------------------------------------------------------------
 (15) i2_WriteByte                                         2     1      1     236
                                              3 COMRAM     2     1      1
                      i2_WriteNibble
 ---------------------------------------------------------------------------------
 (16) i2_WriteNibble                                       3     2      1      96
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (15) i2_WaitLCD                                           1     1      0      47
                                              1 COMRAM     1     1      0
                         i2_ReadByte
 ---------------------------------------------------------------------------------
 (16) i2_ReadByte                                          1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _searched
     ___awdiv
       ___awmod (ARG)
     ___awmod
     _flashlight
   _setup
     _init_debug
       _LCDClear
         _WaitLCD
           _ReadByte
         _WriteByte
           _WriteNibble
       _LCDGoto
         _WaitLCD
           _ReadByte
         _WriteByte
           _WriteNibble
       _LCDInit
         _WaitLCD
           _ReadByte
         _WriteNibble
       _LCDWriteStr
         _LCDPutChar
           _WaitLCD
             _ReadByte
           _WriteByte
             _WriteNibble
       _show_debug
         _LCDWriteInt
           _LCDGoto
             _WaitLCD
               _ReadByte
             _WriteByte
               _WriteNibble
           _LCDWriteStr
             _LCDPutChar
               _WaitLCD
                 _ReadByte
               _WriteByte
                 _WriteNibble
           ___awdiv
             ___awmod (ARG)
           ___awmod

 _ISR (ROOT)
   _pedometer
     i2_show_debug
       i2_LCDWriteInt
         i2_LCDGoto
           i2_WaitLCD
             i2_ReadByte
           i2_WriteByte
             i2_WriteNibble
         i2_LCDWriteStr
           i2_LCDPutChar
             i2_WaitLCD
               i2_ReadByte
             i2_WriteByte
               i2_WriteNibble
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
   _synchronize
   i2_flashlight
   i2_searched
     i2___awdiv
       i2___awmod (ARG)
     i2___awmod
     i2_flashlight

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     154      37        8.7%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      11       5       10.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      36       1       57.4%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      12        0.0%
DATA                 0      0     19B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 01 16:49:42 2017

            __CFG_CP0$ON 000000              __CFG_CP1$ON 000000              __CFG_CP2$ON 000000  
            __CFG_CP3$ON 000000              ?_LCDPutChar 0001                       l84 1ACA  
            __CFG_CPB$ON 000000              __CFG_CPD$ON 000000             ___awdiv@sign 0034  
   __size_of_WriteNibble 0044                      _ISR 0008                      u570 1840  
                    u660 152E                      u670 156A                      u667 1524  
                    u588 1842                      u677 1560                      u990 19DC  
     i2LCDWriteInt@value 0010             ___awmod@sign 002E                      wreg 000FE8  
            i2_WriteByte 1A24          __end_of_LCDInit 125A             __CFG_LVP$OFF 000000  
        __end_of_LCDGoto 18F4             ?_LCDWriteInt 0060                     ?_ISR 0001  
           ?_LCDWriteStr 002F                     ISR@i 0027                     l1500 1424  
                   l1502 142C                     l1520 1464                     l1512 144C  
                   l1504 1430                     l1516 1456                     l1540 1690  
                   l1532 1676                     l1542 1698                     l1462 18CA  
                   l1544 169C                     l1552 16BA                     l1536 1682  
                   l1466 18D4                     l1474 14F8                     l1556 16C8  
                   l1548 16B0                     l1494 140E                     l1398 1A66  
                   l1478 1534                     l1488 13FE                     l1834 12F4  
                   l1828 127A                     STR_1 1012                     STR_2 1001  
                   u1008 19DE                     u1137 118A                     u1147 11A4  
                   u1157 11BA                     u1167 11CC                     _LATD 000F8C  
                   u1177 19C2                     u1187 12EA                     i2l74 0072  
    i2LCDWriteInt@column 0014                     i2l79 00A0          i2WriteByte@data 0004  
           __CFG_WRT0$ON 000000             __CFG_WRT1$ON 000000             __CFG_WRT2$ON 000000  
           __CFG_WRT3$ON 000000            __CFG_EBTR0$ON 000000            __CFG_EBTR1$ON 000000  
          __CFG_EBTR2$ON 000000            __CFG_EBTR3$ON 000000             __CFG_WRTB$ON 000000  
           __CFG_WRTC$ON 000000             __CFG_WRTD$ON 000000   __size_ofi2_WriteNibble 0044  
          __CFG_EBTRB$ON 000000                     _main 1AC2     __end_ofi2_show_debug 1AA8  
                   fsr0h 000FEA                     fsr1h 000FE2                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0037  
          __CFG_BORV$190 000000      i2LCDWriteInt@string 0011                     prodh 000FF4  
                   prodl 000FF3                     start 00DC               i2_searched 1334  
          __CFG_IESO$OFF 000000             ___param_bank 000000                    ??_ISR 0018  
       __end_of_LCDClear 19D2          __end_of_WaitLCD 1A74       __size_ofi2_LCDGoto 003A  
                  ?_main 0069          __end_of___awdiv 146E          __end_of___awmod 16D2  
        ___awdiv@divisor 0031              _synchronize 1AB6          ___awdiv@counter 0033  
                  _PORTD 000F83           __CFG_FCMEN$OFF 000000         i2WriteNibble@cmd 0003  
     __CFG_MCLRE$EXTMCLR 000000                    _setup 15F2                    _steps 006E  
                  pclath 000FFA                    tablat 000FF5      __size_of_LCDPutChar 0012  
     __size_ofi2_WaitLCD 0012              ?i2_ReadByte 0001                    status 000FD8  
  __size_ofi2_flashlight 001C           __CFG_HFOFST$ON 000000            WaitLCD@status 002A  
     __size_ofi2___awdiv 0084       __size_ofi2___awmod 0070           __CFG_PBADEN$ON 000000  
        __initialization 17E8             __end_of_main 1ACC         __end_of_ReadByte 195E  
          i2_WriteNibble 1876                   ??_main 0037            __activetblptr 000002  
              ??_LCDInit 002C                ??_LCDGoto 002F      i2LCDWriteStr@string 0007  
           i2_flashlight 19EE         ___awdiv@dividend 002F                   ?_setup 0001  
          LCDGoto@column 0033        __end_ofi2_LCDGoto 192E                   i2l1600 1482  
                 i2l1452 1A8A                   i2l1612 14A8                   i2l1614 14B0  
                 i2l1606 1492                   i2l1632 14E8                   i2l1624 14D0  
                 i2l1616 14B4                   i2l1628 14DA                   i2l1660 1720  
                 i2l1652 1700                   i2l1644 16E6                   i2l1574 1904  
                 i2l1590 15B4                   i2l1654 1708           __CFG_WDTEN$OFF 000000  
                 i2l1656 170C                   i2l1664 172A                   i2l1648 16F2  
                 i2l1578 190E                   i2l1586 1578                   i2l1668 1738  
                 i2l1852 13C0                   i2l1846 134E                   i2l1872 0062  
                 i2l1882 008C                   i2l1886 009C              ?i2_searched 0001  
              ??_WaitLCD 002A           __CFG_PWRTEN$ON 000000           __CFG_XINST$OFF 000000  
              ??___awdiv 0033           __CFG_STVREN$ON 000000                ??___awmod 002D  
          ?i2_LCDPutChar 0001        i2WriteNibble@data 0001           ?i2_WriteNibble 0001  
       ___awdiv@quotient 0035          ___awmod@divisor 002B          ___awmod@counter 002D  
      __end_ofi2_WaitLCD 1A98         __end_of_searched 1334           i2___awdiv@sign 000C  
    __size_ofi2_ReadByte 0030             __pdataBIGRAM 0071        __end_ofi2___awdiv 14F2  
      __end_ofi2___awmod 1742             __mediumconst 0000                   tblptrh 000FF7  
           LCDWriteStr@i 0033                   tblptrl 000FF6                   tblptru 000FF8  
            i2searched@i 0012           i2___awmod@sign 0006    __size_ofi2_show_debug 0010  
              ?_LCDClear 0001     __size_of_LCDWriteInt 0058     __size_of_LCDWriteStr 0080  
             __accesstop 0060  __end_of__initialization 1824       __size_of_WriteByte 001A  
          ___rparam_used 000001           __pcstackCOMRAM 0001           WriteNibble@cmd 002B  
           __pidataBANK0 1ACC           ??i2_LCDPutChar 0006             ??_LCDPutChar 002E  
          __end_of_setup 1662   __size_ofi2_LCDWriteInt 004E   __size_ofi2_LCDWriteStr 0080  
           i2_show_debug 1A98      __size_ofi2_searched 00B6             ?i2_WriteByte 0004  
                ??_setup 0037               __pbssBANK0 006E             WriteByte@cmd 002D  
             ??_LCDClear 002E          __CFG_PLLCFG$OFF 000000                ?_ReadByte 0001  
     __end_of_LCDPutChar 1A62             i2LCDGoto@row 0006       __size_of_pedometer 000E  
     __CFG_CCP2MX$PORTC1 000000            i2_LCDGoto$670 0009          ??i2_WriteNibble 0002  
     __CFG_CCP3MX$PORTB5 000000            ??_WriteNibble 002A        LCDWriteInt@column 0062  
      LCDWriteInt@string 0063             ?_synchronize 0001        __end_of_WriteByte 1A24  
                _LCDInit 1172                  _LCDGoto 18BA               _flashlight 19D2  
                i2u60_40 1884                  i2u61_48 1886                  i2u84_40 15AE  
                i2u84_47 15A4                  i2u85_40 15EA                  i2u85_47 15E0  
                _PR2bits 000FBB            i2_LCDWriteInt 179A            i2_LCDWriteStr 1572  
           ??i2_ReadByte 0001               ??_ReadByte 0029                ?_searched 0001  
                __Hparam 0000                  _WaitLCD 1A62                  __Lparam 0000  
                ___awdiv 13EA                  ___awmod 1662               _init_debug 198E  
           __psmallconst 1000                  __pcinit 17E8                  __ramtop 1000  
                __ptext0 1AC2                  __ptext1 15F2                  __ptext2 198E  
                __ptext3 1A3E                  __ptext4 1742                  __ptext5 14F2  
                __ptext6 1A50                  __ptext7 18BA                  __ptext8 1172  
                __ptext9 19B2             __size_of_ISR 00D4       __end_ofi2_ReadByte 198E  
              _T2CONbits 000FBA      __end_of_WriteNibble 1876         ___awmod@dividend 0029  
      __end_of_pedometer 1AB6           ?i2_LCDWriteInt 000F           i2LCDWriteStr@i 000B  
         ?i2_LCDWriteStr 0007     end_of_initialization 1824     __end_ofi2_LCDPutChar 1A86  
          __Lmediumconst 0000                i2_LCDGoto 18F4             ??i2_searched 000F  
             ??_searched 0060        LCDWriteStr@string 002F                  postdec1 000FE5  
                postinc0 000FEE         i2LCDPutChar@data 0006               _show_debug 1A3E  
       __CFG_FOSC$INTIO7 000000                i2_WaitLCD 1A86                _TRISBbits 000F93  
              _TRISCbits 000F94                _TRISDbits 000F95              ?_flashlight 0001  
     __end_ofi2_searched 13EA                i2___awdiv 146E                i2___awmod 16D2  
       searched@max_time 0065     __size_ofi2_WriteByte 001A              _CCP1CONbits 000FBD  
             LCDGoto@row 002E           i2WriteByte@cmd 0005        __size_of_LCDClear 0020  
     i2___awdiv@dividend 0007               ?i2_LCDGoto 0006          WriteNibble@data 0029  
            ?_init_debug 0001          i2WaitLCD@status 0002            __pidataBIGRAM 101E  
            _WriteNibble 1832      start_initialization 17E8               ?i2_WaitLCD 0001  
     i2___awdiv@quotient 000D              __end_of_ISR 00DC     __size_of_synchronize 000C  
        ??i2_LCDWriteInt 0011          ??i2_LCDWriteStr 0009            ??_LCDWriteInt 0037  
          ??_LCDWriteStr 0031               ?i2___awdiv 0007               ?i2___awmod 0001  
      __size_of_ReadByte 0030          i2LCDGoto@column 000B      __size_of_flashlight 001C  
            __pdataBANK0 0070              ?_show_debug 0001                 ?_LCDInit 0001  
               ?_LCDGoto 002E            WriteByte@data 002C    __size_ofi2_LCDPutChar 0012  
          __pcstackBANK0 0060                _WriteByte 1A0A           LCDPutChar@data 002E  
    __size_of_init_debug 0024      __end_of_LCDWriteInt 179A      __end_of_LCDWriteStr 1572  
           searched@time 0067              ??i2_LCDGoto 0007                 ?_WaitLCD 0001  
      __size_of_searched 00DA                __pintcode 0008                 ?___awdiv 002F  
               ?___awmod 0029         LCDWriteInt@value 0061    __end_ofi2_WriteNibble 18BA  
           i2_LCDPutChar 1A74         __CFG_PRICLKEN$ON 000000              __smallconst 1000  
            ??i2_WaitLCD 0002            ?i2_flashlight 0001               ?_WriteByte 002C  
            ??i2___awdiv 000B              ??i2___awmod 0005           __size_of_setup 0070  
       i2ReadByte@status 0001                _pedometer 1AA8                 _LCDClear 19B2  
               _LATBbits 000F8A                 _LATCbits 000F8B                 _LATDbits 000F8C  
    __size_of_show_debug 0012              _LCDGoto$670 0031                 i2u101_40 19F8  
               i2u102_48 19FA                 i2u120_47 13B8                 i2u119_47 007C  
       __CFG_WDTPS$32768 000000         i2LCDWriteInt@row 000F           ??i2_flashlight 0001  
       __size_of_LCDInit 00E8         __size_of_LCDGoto 003A        i2___awdiv@divisor 0009  
           ??_flashlight 0029        i2___awdiv@counter 000B              _LCDWriteInt 1742  
            _LCDWriteStr 14F2              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
              copy_data0 17FC       i2___awmod@dividend 0001               ?_pedometer 0001  
               _ReadByte 192E               _CCPR1Lbits 000FBE                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of_WaitLCD 0012  
      __CFG_P2BMX$PORTD2 000000       __end_of_flashlight 19EE             ??_init_debug 0037  
       __size_of___awdiv 0084             ?_WriteNibble 0029         __size_of___awmod 0070  
          ?i2_show_debug 0001               _ANSELBbits 000F39                searched@i 0063  
          ??i2_WriteByte 0005              ??_WriteByte 002D                 __ptext10 1A0A  
               __ptext11 1832                 __ptext20 19EE                 __ptext12 1A62  
               __ptext21 1AB6                 __ptext13 192E                 __ptext30 1A24  
               __ptext22 1AA8                 __ptext14 125A                 __ptext31 1876  
               __ptext23 1A98                 __ptext15 19D2                 __ptext32 1A86  
               __ptext24 179A                 __ptext16 1662                 __ptext33 195E  
               __ptext25 16D2                 __ptext17 13EA                 __ptext26 146E  
               __ptext27 1572                 __ptext19 1334                 __ptext28 1A74  
               __ptext29 18F4           _kiwi_frequence 0071       __end_of_init_debug 19B2  
          __size_of_main 000A              _kiwi_length 0070       i2searched@max_time 0014  
               _searched 125A           i2searched@time 0016           ReadByte@status 0029  
               int$flags 0037               _LCDPutChar 1A50                 main@argc 0069  
               main@argv 006B           ??i2_show_debug 0015             ??_show_debug 0037  
          ??_synchronize 0001        i2___awmod@divisor 0003        i2___awmod@counter 0005  
             _INTCONbits 000FF2    __end_ofi2_LCDWriteInt 17E8    __end_ofi2_LCDWriteStr 15F2  
               intlevel2 0000              ??_pedometer 0015           LCDWriteInt@row 0060  
    __end_ofi2_WriteByte 1A3E       __end_of_show_debug 1A50     __end_ofi2_flashlight 1A0A  
      __CFG_T3CMX$PORTC0 000000      __end_of_synchronize 1AC2               i2_ReadByte 195E  
